{"version":3,"sources":["../node_modules/shelljs/src sync /^/.//.*$","regle-cras.png","helpers/helpers.js","components/Canvas.jsx","helpers/GenerateMap.js","components/SeaMap.jsx","components/TopBar.jsx","components/Modals/SettingsModal.jsx","components/Modals/LoadMapModal.jsx","components/Modals.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isBetween","value","lower","higher","Canvas","props","mapArray","amer","useState","show","setShow","handleClose","angleVal","setAngleVal","longueurVal","setLongueurVal","deviation","setDeviation","declinaison","setDeclinaison","x1","y1","r","angle","drawLineData","setDrawLineData","amerCanvasRef","useRef","useEffect","length","amerCanvas","current","height","width","drawAndPlaceCRA","regle","Image","src","image","alt","context","getContext","onload","save","translate","rotate","Math","PI","drawImage","restore","parseInt","ref","className","onClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","setCoordinates","Modal","onHide","size","centered","Header","Title","Body","Form","Label","htmlFor","Control","onChange","target","type","placeholder","Footer","Button","variant","moveTo","lineTo","cos","sin","stroke","drawLine","getCenterTile","zoom","degLatitude","degLongitude","degLatDist","degLongDist","asinh","tan","getBeginLastTile","beginLatDegree","beginLongDegree","lastLatDegree","lastLongDegree","convertToDecimalDegre","latitude","longitude","latitudeDistance","longitudeDistance","decimalDegreLatitude","deg","min","sec","decimalDegreLongitude","decimalDegreLatitudeDistance","decimalDegreLongitudeDistance","orientation","generateTileArray","centerTileCoords","beginLastCoords","beginLatTile","beginLongTile","lastLatTile","lastLongTile","sizeLatitude","sizeLongitude","tileArray","Array","i","j","SeaMap","isStoredMap","mapSettingsData","storedMapName","tableRef","canvasGraticuleRef","console","log","cellSpacing","cellPadding","style","border","row","rowIndex","cell","cellIndex","renderTooltip","title","Tooltip","TopBar","setShowSettings","setShowLoadMap","amerState","setAmer","Navbar","sticky","position","bg","href","OverlayTrigger","placement","overlay","icon","faMapMarkedAlt","faSave","faLifeRing","faPencilRuler","faQuestion","SettingsModal","setMapArray","mapNameState","savedMapsState","setMapSettingsData","setIsStoredMap","savedMaps","setSavedMaps","showSettings","mapName","setMapName","latDeg","setLatDeg","latMin","setLatMin","latSec","setLatSec","latRad","setLatRad","lonDeg","setLonDeg","lonMin","setLonMin","lonSec","setLonSec","lonRad","setLonRad","lonDistDeg","setLonDistDeg","lonDistMin","setLonDistMin","latDistDeg","setLatDistDeg","latDistMin","setLatDistMin","mapZoom","setMapZoom","handleCloseSettings","noValidate","name","role","aria-label","autoComplete","checked","data","generateMapArray","find","savedMap","fs","window","require","request","shelljs","LoadMapModal","mapArrayState","isStoredMapState","storedMapState","showLoadMap","setStoredMapName","handleCloseLoadMap","download","uri","filename","callback","head","pipe","createWriteStream","on","done","a","data_file","content_file","mkdir","err","writeFile","saveCurrentMap","currentlySelectedMapName","setCurrentlySelectedMapName","Group","disabled","as","currMapName","dataFilePath","readFile","split","latSize","lonSize","newMapArray","Modals","settingsModal","loadMapModal","hasLoadedMapDir","setHasLoadedMapDir","localMapArray","readdir","_","fileList","forEach","file","push","loadStoredMaps","App","x","y","html","document","documentElement","ele","getElementById","mouseMoveHandler","offsetLeft","offsetTop","scrollHeight","clientHeight","scrollWidth","clientWidth","dx","dy","mouseUpHandler","removeEventListener","cursor","removeProperty","addEventListener","userSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderReactDom","ReactDOM","render","cordova"],"mappings":"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","file":"static/js/main.e731e9e5.chunk.js","sourcesContent":["var map = {\n\t\"./cat\": 250,\n\t\"./cat.js\": 250,\n\t\"./cd\": 151,\n\t\"./cd.js\": 151,\n\t\"./chmod\": 251,\n\t\"./chmod.js\": 251,\n\t\"./common\": 13,\n\t\"./common.js\": 13,\n\t\"./cp\": 152,\n\t\"./cp.js\": 152,\n\t\"./dirs\": 252,\n\t\"./dirs.js\": 252,\n\t\"./echo\": 253,\n\t\"./echo.js\": 253,\n\t\"./error\": 153,\n\t\"./error.js\": 153,\n\t\"./exec\": 254,\n\t\"./exec-child\": 255,\n\t\"./exec-child.js\": 255,\n\t\"./exec.js\": 254,\n\t\"./find\": 256,\n\t\"./find.js\": 256,\n\t\"./grep\": 257,\n\t\"./grep.js\": 257,\n\t\"./head\": 258,\n\t\"./head.js\": 258,\n\t\"./ln\": 259,\n\t\"./ln.js\": 259,\n\t\"./ls\": 156,\n\t\"./ls.js\": 156,\n\t\"./mkdir\": 260,\n\t\"./mkdir.js\": 260,\n\t\"./mv\": 261,\n\t\"./mv.js\": 261,\n\t\"./popd\": 262,\n\t\"./popd.js\": 262,\n\t\"./pushd\": 263,\n\t\"./pushd.js\": 263,\n\t\"./pwd\": 155,\n\t\"./pwd.js\": 155,\n\t\"./rm\": 157,\n\t\"./rm.js\": 157,\n\t\"./sed\": 264,\n\t\"./sed.js\": 264,\n\t\"./set\": 265,\n\t\"./set.js\": 265,\n\t\"./sort\": 266,\n\t\"./sort.js\": 266,\n\t\"./tail\": 267,\n\t\"./tail.js\": 267,\n\t\"./tempdir\": 154,\n\t\"./tempdir.js\": 154,\n\t\"./test\": 268,\n\t\"./test.js\": 268,\n\t\"./to\": 269,\n\t\"./to.js\": 269,\n\t\"./toEnd\": 270,\n\t\"./toEnd.js\": 270,\n\t\"./touch\": 271,\n\t\"./touch.js\": 271,\n\t\"./uniq\": 272,\n\t\"./uniq.js\": 272,\n\t\"./which\": 273,\n\t\"./which.js\": 273\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 525;","export default __webpack_public_path__ + \"static/media/regle-cras.38c0b4c7.png\";","export const isBetween = (value, lower, higher) => value >= lower && value <= higher;\nexport const degToRadian = (degrees) => { return degrees * (Math.PI / 180); }","import \"./Canvas.css\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport image from \"../regle-cras.png\";\nimport { degToRadian } from \"../helpers/helpers\";\n\n// Valeur pour prendre le nord en référence comme 0°\nconst DEFAULT_ANGLE = 90;\nconst CALIBRAGE_ZERO_ROUGE = -0.0845;\nconst CALIBRAGE_ZERO_NOIR = -0.9155;\n\nexport const Canvas = (props) => {\n    const { mapArray, amer } = props;\n\n    //Modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n\n    // Angle et Longueur\n    const [angleVal, setAngleVal] = useState(\"0\");\n    const [longueurVal, setLongueurVal] = useState(\"200\");\n\n    // Déviation et Déclinaison\n    const [deviation, setDeviation] = useState(\"0\");\n    const [declinaison, setDeclinaison] = useState(\"0\");\n\n    // Donnée pour tracer le trait\n    const [drawLineData, setDrawLineData] = useState({\n        x1: 0,\n        y1: 0,\n        r: 0,\n        angle: 0 - DEFAULT_ANGLE\n    });\n\n    const amerCanvasRef = useRef(null);\n    useEffect(() => {\n        if (mapArray.length) {\n            const amerCanvas = amerCanvasRef.current;\n\n            amerCanvas.height = mapArray.length * 256;\n            amerCanvas.width = mapArray[0].length * 256;\n        }\n    }, [mapArray]);\n\n    // Récupérer coordonnées clique\n    /**\n     *\n     */\n    const drawLine = () => {\n        const context = amerCanvasRef.current.getContext(\"2d\");\n        context.moveTo(drawLineData.x1, drawLineData.y1);\n        context.lineTo(\n            drawLineData.x1 +\n                drawLineData.r * Math.cos((Math.PI * drawLineData.angle) / 180),\n            drawLineData.y1 +\n                drawLineData.r * Math.sin((Math.PI * drawLineData.angle) / 180)\n        );\n        context.stroke();\n    };\n\n    const drawPoint = (x, y, color) => {\n        const context = amerCanvasRef.current.getContext(\"2d\");\n        context.fillStyle = color || \"black\";\n        context.beginPath();\n        context.arc(x, y, 5, 0, 2 * Math.PI, true);\n        context.fill();\n    };\n\n    /**\n     *\n     */\n    // Règle de cras\n    // Pour obtenir le milieu de la règle : -(regle.width / 2)\n    // Pour obtenir le point 0 du rapporteur (rouge) : CALIBRAGE_ZERO_ROUGE * regle.height\n    // Pour obtenir le point 0 du rapporteur (noir) : CALIBRAGE_ZERO_NOIR * regle.height\n    const drawAndPlaceCRA = () => {\n        // var regle = document.createElement('img');\n        var regle = new Image();\n        regle.src = image;\n        regle.alt = \"alt text\";\n\n        const context = amerCanvasRef.current.getContext(\"2d\");\n\n        regle.onload = function () {\n            context.save();\n            context.translate(drawLineData.x1, drawLineData.y1);\n            context.rotate(degToRadian(angleVal - DEFAULT_ANGLE));\n\n            if (angleVal >= 180) {\n                context.drawImage(regle, -(regle.width / 2), 0);\n            } else {\n                context.drawImage(regle, -(regle.width / 2), 0);\n            }\n\n            context.restore();\n        };\n    };\n\n    useEffect(() => {\n        setDrawLineData({\n            ...drawLineData,\n            angle:\n                parseInt(angleVal, 10) +\n                parseInt(deviation, 10) +\n                parseInt(declinaison, 10) -\n                DEFAULT_ANGLE\n        });\n    }, [angleVal]);\n\n    useEffect(() => {\n        setDrawLineData({ ...drawLineData, r: longueurVal });\n    }, [longueurVal]);\n\n    const handleOnSubmit = (event) => {\n        drawLine();\n        drawAndPlaceCRA();\n        handleClose();\n    };\n\n    /**\n     *\n     * @param {L'évènement} event\n     */\n    const setCoordinates = (event) => {\n        setShow(true);\n        const rect = amerCanvasRef.current.getBoundingClientRect();\n        setDrawLineData({\n            ...drawLineData,\n            x1: event.clientX - rect.left,\n            y1: event.clientY - rect.top,\n            r: longueurVal\n        });\n    };\n\n    return (\n        <>\n            <canvas\n                id=\"canvas\"\n                ref={amerCanvasRef}\n                className=\"canvas-style mt-5\"\n                onClick={(e) => !!amer && setCoordinates(e)}\n            ></canvas>\n\n            <Modal show={show} onHide={handleClose} size=\"sm\" centered>\n                <Modal.Header>\n                    <Modal.Title>Relever l'amer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Label htmlFor=\"angle\">Angle</Form.Label>\n                    <Form.Control\n                        className=\"mb-2 mr-sm-2\"\n                        id=\"angle\"\n                        value={angleVal}\n                        onChange={(e) => setAngleVal(e.target.value)}\n                        type=\"number\"\n                        placeholder=\"Angle\"\n                    />\n                    <Form.Label htmlFor=\"longueur\">Longueur</Form.Label>\n                    <Form.Control\n                        className=\"mb-2 mr-sm-2\"\n                        id=\"longueur\"\n                        value={longueurVal}\n                        onChange={(e) => setLongueurVal(e.target.value)}\n                        type=\"number\"\n                        placeholder=\"Longueur\"\n                    />\n                    <Form.Label htmlFor=\"declinaison\">\n                        Déclinaison (D)\n                    </Form.Label>\n                    <Form.Control\n                        className=\"mb-2 mr-sm-2\"\n                        id=\"declinaison\"\n                        value={declinaison}\n                        onChange={(e) => setDeclinaison(e.target.value)}\n                        type=\"number\"\n                        placeholder=\"Déclinaison\"\n                    />\n                    <Form.Label htmlFor=\"deviation\">Déviation (d)</Form.Label>\n                    <Form.Control\n                        className=\"mb-2 mr-sm-2\"\n                        id=\"deviation\"\n                        value={deviation}\n                        onChange={(e) => setDeviation(e.target.value)}\n                        type=\"number\"\n                        placeholder=\"Déviation\"\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Annuler\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleOnSubmit}>\n                        Valider le marquage\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n","export const generateMapArray = (data) => {\n    const { latitude, longitude, latitudeDistance, longitudeDistance, zoom, size } = data;\n\n\n    const { decimalDegreLatitude, decimalDegreLongitude, decimalDegreLatitudeDistance, decimalDegreLongitudeDistance } =\n        convertToDecimalDegre(latitude, longitude,latitudeDistance, longitudeDistance);\n\n\n    const centerTileCoords = getCenterTile(\n        zoom,\n        decimalDegreLatitude,\n        decimalDegreLongitude,\n        decimalDegreLatitudeDistance,\n        decimalDegreLongitudeDistance\n    );\n\n    const beginLastCoords = getBeginLastTile(\n        zoom,\n        decimalDegreLatitude,\n        decimalDegreLongitude,\n        decimalDegreLatitudeDistance,\n        decimalDegreLongitudeDistance\n    );\n    \n    return generateTileArray(centerTileCoords, beginLastCoords, zoom, size);\n};\n\n/**\n * Fonction permettant de convertir des degrés en numéro de la Tile centrale pour préparer\n * les appels à l'API OpenStreetMap et OpenSeaMap\n * @param {Le zoom que l'on veut appliquer à la carte} zoom\n * @param {Le degré de latitude} degLatitude\n * @param {Le degré de longitude} degLongitude\n * @returns Un tableau avec les 2 paramètres nécessaires aux appels l'API OpenStreetMap et OpenSeaMap\n */\nconst getCenterTile = (zoom, degLatitude, degLongitude, degLatDist, degLongDist) => [\n    parseInt(\n        ((1.0 - Math.asinh(Math.tan(degLatitude * (Math.PI / 180))) / Math.PI) /\n            2.0) *\n            2.0 ** zoom\n    ),\n    parseInt(((degLongitude + 180.0) / 360.0) * 2.0 ** zoom),\n    parseInt(\n        ((1.0 - Math.asinh(Math.tan(degLatDist * (Math.PI / 180))) / Math.PI) /\n            2.0) *\n            2.0 ** zoom\n    ),\n    parseInt(((degLongDist + 180.0) / 360.0) * 2.0 ** zoom)\n\n];\n\nconst getBeginLastTile = (zoom, degLatitude, degLongitude, degLatDist, degLongDist) => {\n\n  const beginLatDegree = degLatitude - degLatDist;\n  const beginLongDegree = degLongitude - degLongDist;\n\n  const lastLatDegree = degLatitude + degLatDist;\n  const lastLongDegree = degLongitude + degLongDist;\n\n\n\n  const beginLatTile = parseInt(\n          ((1.0 - Math.asinh(Math.tan(beginLatDegree * (Math.PI / 180))) / Math.PI) /\n              2.0) *\n              2.0 ** zoom\n      );\n\n  const beginLongTile = parseInt(((beginLongDegree + 180.0) / 360.0) * 2.0 ** zoom);\n\n\n  const lastLatTile = parseInt(\n          ((1.0 - Math.asinh(Math.tan(lastLatDegree * (Math.PI / 180))) / Math.PI) /\n              2.0) *\n              2.0 ** zoom\n      );\n\n  const lastLongTile = parseInt(((lastLongDegree + 180.0) / 360.0) * 2.0 ** zoom);\n\nreturn [beginLatTile, beginLongTile, lastLatTile, lastLongTile];\n};\n\n\n/**\n * Fonction permettant de convertir des DMS (Degré, Minutes, Secondes) en DD (Degré Decimaux)\n * @param {La latitude à convertir en DD} latitude\n * @param {La longitude à convertir en DD} longitude\n * @returns Les coordonnées DMS converties en DD\n */\nexport const convertToDecimalDegre = (latitude, longitude, latitudeDistance, longitudeDistance) => {\n    const decimalDegreLatitude =\n        parseInt(latitude.deg) +\n        (latitude.min * 60 + parseInt(latitude.sec)) / 3600;\n    const decimalDegreLongitude =\n        parseInt(longitude.deg) +\n        (longitude.min * 60 + parseInt(longitude.sec)) / 3600;\n\n    const decimalDegreLatitudeDistance =\n        parseInt(latitudeDistance.deg) +\n        (latitudeDistance.min * 60)/3600;\n\n    const decimalDegreLongitudeDistance =\n        parseInt(longitudeDistance.deg) +\n        (longitudeDistance.min * 60)/3600;\n\n\n    return {\n        decimalDegreLatitude:\n            latitude.orientation === \"S\"\n                ? -decimalDegreLatitude\n                : decimalDegreLatitude,\n        decimalDegreLongitude:\n            longitude.orientation === \"O\"\n                ? -decimalDegreLongitude\n                : decimalDegreLongitude,\n        decimalDegreLatitudeDistance,\n        decimalDegreLongitudeDistance\n\n    };\n};\n\n/**\n * Créé le tableau contenant les coordonnées de toutes les tiles\n * @param {Les coordonnées de la taille centrale} centerTileCoords\n * @param {Le zoom de la carte} zoom\n * @param {La taille de la carte} size\n * @returns\n */\nconst generateTileArray = (centerTileCoords, beginLastCoords, zoom, size) => {\n\n\n\n    const beginLatTile = beginLastCoords[0];\n    const beginLongTile = beginLastCoords[1];\n\n    const lastLatTile = beginLastCoords[2];\n    const lastLongTile = beginLastCoords[3];\n\n    const sizeLatitude = beginLatTile - lastLatTile ;\n    const sizeLongitude = lastLongTile - beginLongTile ;\n\n    const tileArray = [...Array(sizeLatitude + 1)].map(() => Array(sizeLongitude + 1));\n\n    const latitudeDistance = (sizeLatitude / 2) >> 0;\n    const longitudeDistance = (sizeLongitude / 2) >> 0;\n\n\n\n    /*\n    const end = (size / 2) >> 0;\n    const start = size % 2 !== 0 ? -end : -(end - 1);\n    const add = size % 2 !== 0 ? end : Math.abs(start);\n    */\n    for (let i = beginLongTile; i <= lastLongTile; ++i){\n        for (let j = lastLatTile; j <= beginLatTile; ++j){\n            tileArray[j - lastLatTile][i - beginLongTile] = [\n                zoom,\n                 i,\n                 j\n            ];\n          }\n        }\n    return tileArray;\n};\n\n\nexport function deg_to_dms (dd, isLng) {\n  var dir = dd < 0\n     ? isLng ? 'O' : 'S'\n     : isLng ? 'E' : 'N';\n\n   var absDd = Math.abs(dd);\n   var deg = absDd | 0;\n   var frac = absDd - deg;\n   var min = (frac * 60) | 0;\n   var sec = frac * 3600 - min * 60;\n   // Round it to 2 decimal points.\n   sec = Math.round(sec * 100) / 100;\n   return deg + \"°\" + min + \"'\" + sec + '\"' + dir;\n}\n","import \"./SeaMap.css\";\nimport React, { useRef } from \"react\";\nimport { convertToDecimalDegre } from \"../helpers/GenerateMap\";\nimport { deg_to_dms } from \"../helpers/GenerateMap\";\n\n// Récupérer coordonnées clique\n/*const drawLine = (tableRef, canvasGraticuleRef, scrollContainerRef) => {\n    const context = canvasGraticuleRef.current.getContext(\"2d\");\n    const canvasGraticule = canvasGraticuleRef.current;\n    const scrollContainer = scrollContainerRef.current;\n\n    canvasGraticule.height = tableRef.current.offsetHeight;\n    canvasGraticule.width = tableRef.current.offsetWidth;\n    scrollContainer.height = tableRef.current.offsetHeight;\n    scrollContainer.width = tableRef.current.offsetWidth;\n\n    for (var i = 0; i < canvasGraticule.width; i += 150) {\n        context.moveTo(i, 0);\n        context.lineTo(i, canvasGraticule.height);\n        context.stroke();\n    }\n};*/\n\n// Grille\nconst drawLine = (tableRef, canvasGraticuleRef, mapSettingsData, mapArray) => {\n    const context = canvasGraticuleRef.current.getContext(\"2d\");\n    const canvasGraticule = canvasGraticuleRef.current;\n\n    const latitude = mapSettingsData.latitude;\n    const longitude = mapSettingsData.longitude;\n\n    const latitudeDistance = mapSettingsData.latitudeDistance;\n    const longitudeDistance = mapSettingsData.longitudeDistance;\n\n    const zoom = mapSettingsData.zoom;\n\n    const longitudeString =\n        longitude.deg +\n        \"° \" +\n        longitude.min +\n        \"' \" +\n        longitude.sec +\n        '\" ' +\n        longitude.orientation;\n\n    const {\n        decimalDegreLatitude,\n        decimalDegreLongitude,\n        decimalDegreLatitudeDistance,\n        decimalDegreLongitudeDistance\n    } = convertToDecimalDegre(\n        latitude,\n        longitude,\n        latitudeDistance,\n        longitudeDistance\n    );\n\n    const diffDegLongitude =\n        decimalDegreLongitude - decimalDegreLongitudeDistance;\n    const diffDegLatitude = decimalDegreLatitude + decimalDegreLatitudeDistance;\n\n    canvasGraticule.height = mapArray.length * 256;\n    canvasGraticule.width = mapArray[0].length * 256;\n\n    var height = mapArray.length * 256;\n    var width = mapArray[0].length * 256;\n\n    var longitudeDegDepart = diffDegLongitude;\n    for (var i = 0; i < width; i += width / 2 / 6) {\n        context.moveTo(i, 0);\n        context.lineTo(i, height);\n        context.stroke();\n        context.font = \"15px Arial\";\n        context.fillText(deg_to_dms(longitudeDegDepart, true), i, 20);\n        longitudeDegDepart += decimalDegreLongitudeDistance / 6;\n    }\n\n    var latitudeDegDepart = diffDegLatitude;\n    for (var i = 0; i < height; i += height / 2 / 6) {\n        context.moveTo(0, i);\n        context.lineTo(width, i);\n        context.stroke();\n        context.font = \"15px Arial\";\n        context.fillText(deg_to_dms(latitudeDegDepart, false), 10, i);\n        latitudeDegDepart -= decimalDegreLatitudeDistance / 6;\n    }\n};\n\nexport const SeaMap = (props) => {\n    const { mapArray, mapSettingsData, isStoredMap, storedMapName } = props;\n\n    //Ref\n    const tableRef = useRef(null);\n    const canvasGraticuleRef = useRef(null);\n\n    console.log(isStoredMap);\n    return (\n        <div>\n            <canvas\n                ref={canvasGraticuleRef}\n                className=\"canvas-style-gaticule mt-5\"\n            ></canvas>\n            <table\n                id=\"map\"\n                ref={tableRef}\n                className=\"mt-5\"\n                cellSpacing=\"0\"\n                cellPadding=\"0\"\n                style={{ border: \"none\" }}\n            >\n                <tbody>\n                    {mapArray.map((row, rowIndex) => {\n                        return (\n                            <tr key={rowIndex}>\n                                {row.map((cell, cellIndex) => {\n                                    return (\n                                        <td\n                                            key={cellIndex}\n                                            style={`background-image: url(../../../cartes/${storedMapName}/openstreetmap/${cell[0]}_${cell[1]}.png)`}\n                                        >\n                                            <img\n                                                alt=\"\"\n                                                src={\n                                                    isStoredMap\n                                                        ? `../../../cartes/${storedMapName}/openseamap/${cell[0]}_${cell[1]}.png`\n                                                        : `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`\n                                                }\n                                            />\n                                        </td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n","import {\n    Button,\n    Navbar,\n    OverlayTrigger,\n    Tooltip,\n    Toast\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faLifeRing,\n    faMapMarkedAlt,\n    faPencilRuler,\n    faQuestion,\n    faSave\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./TopBar.css\";\n\nconst renderTooltip = (title) => <Tooltip id=\"button-tooltip\">{title}</Tooltip>;\n\nexport const TopBar = (props) => {\n    const { setShowSettings, setShowLoadMap, amerState } = props;\n    const [amer, setAmer] = amerState;\n\n    const handleShowSettings = () => setShowSettings(true);\n    const handleShowLoadMap = () => setShowLoadMap(true);\n    const handleAmerState = () => setAmer(!amer);\n\n    return (\n        <>\n            <Navbar\n                sticky=\"top\"\n                className=\"navbar-dark\"\n                style={{ position: \"fixed\", width: \"100%\" }}\n                bg=\"dark\"\n            >\n                <div className=\"topbar-container\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                        &nbsp;&nbsp;Assistance Navigation Maritime\n                    </a>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={renderTooltip(\"Gérer les coordonnées\")}\n                    >\n                        <Button variant=\"primary\" onClick={handleShowSettings}>\n                            <FontAwesomeIcon icon={faMapMarkedAlt} size=\"lg\" />\n                        </Button>\n                    </OverlayTrigger>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={renderTooltip(\"Charger une carte\")}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            className=\"spacedButton\"\n                            onClick={handleShowLoadMap}\n                        >\n                            <FontAwesomeIcon icon={faSave} size=\"lg\" />\n                        </Button>\n                    </OverlayTrigger>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={renderTooltip(\"Placer un amer\")}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            className=\"spacedButton\"\n                            onClick={handleAmerState}\n                        >\n                            <FontAwesomeIcon icon={faLifeRing} size=\"lg\" />\n                            {!!amer ? \" ON\" : \" OFF\"}\n                        </Button>\n                    </OverlayTrigger>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={renderTooltip(\"Tracer une route\")}\n                    >\n                        <Button variant=\"primary\" className=\"spacedButton\">\n                            <FontAwesomeIcon icon={faPencilRuler} size=\"lg\" />\n                        </Button>\n                    </OverlayTrigger>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={renderTooltip(\"Aide\")}\n                    >\n                        <Button variant=\"primary\" className=\"spacedButton\">\n                            <FontAwesomeIcon icon={faQuestion} size=\"lg\" />\n                        </Button>\n                    </OverlayTrigger>\n                </div>\n            </Navbar>\n        </>\n    );\n};\n","import { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { isBetween } from \"../../helpers/helpers\";\nimport { generateMapArray } from \"../../helpers/GenerateMap\";\n\nexport const SettingsModal = (props) => {\n    const {\n        show,\n        setMapArray,\n        mapNameState,\n        savedMapsState,\n        setMapSettingsData,\n        setIsStoredMap\n    } = props;\n    const [savedMaps, setSavedMaps] = savedMapsState;\n    const [showSettings, setShowSettings] = show;\n    const [mapName, setMapName] = mapNameState;\n\n    // Latitude\n    const [latDeg, setLatDeg] = useState(\"47\");\n    const [latMin, setLatMin] = useState(\"25\");\n    const [latSec, setLatSec] = useState(\"0\");\n    const [latRad, setLatRad] = useState(\"N\");\n\n    // Longitude\n    const [lonDeg, setLonDeg] = useState(\"2\");\n    const [lonMin, setLonMin] = useState(\"50\");\n    const [lonSec, setLonSec] = useState(\"0\");\n    const [lonRad, setLonRad] = useState(\"O\");\n\n    // Distance Longitude\n    const [lonDistDeg, setLonDistDeg] = useState(\"0\");\n    const [lonDistMin, setLonDistMin] = useState(\"15\");\n\n    // Distance Latitude\n    const [latDistDeg, setLatDistDeg] = useState(\"0\");\n    const [latDistMin, setLatDistMin] = useState(\"15\");\n\n    // Footer\n    const [mapZoom, setMapZoom] = useState(\"13\");\n\n    const handleCloseSettings = () => setShowSettings(false);\n    const applySettings = () => {\n        const mapArray = generateMapArray({\n            latitude: {\n                deg: latDeg,\n                min: latMin,\n                sec: latSec,\n                orientation: latRad\n            },\n            longitude: {\n                deg: lonDeg,\n                min: lonMin,\n                sec: lonSec,\n                orientation: lonRad\n            },\n            longitudeDistance: {\n                deg: lonDistDeg,\n                min: lonDistMin\n            },\n            latitudeDistance: {\n                deg: latDistDeg,\n                min: latDistMin\n            },\n            zoom: parseInt(mapZoom)\n        });\n        console.log(\"changement de isStored à false\");\n        setIsStoredMap(false);\n        setMapSettingsData({\n            latitude: {\n                deg: latDeg,\n                min: latMin,\n                sec: latSec,\n                orientation: latRad\n            },\n            longitude: {\n                deg: lonDeg,\n                min: lonMin,\n                sec: lonSec,\n                orientation: lonRad\n            },\n            longitudeDistance: {\n                deg: lonDistDeg,\n                min: lonDistMin\n            },\n            latitudeDistance: {\n                deg: latDistDeg,\n                min: latDistMin\n            },\n            zoom: parseInt(mapZoom),\n            name: mapName\n        });\n        setMapArray(mapArray);\n        if (!savedMaps.find((savedMap) => savedMap === mapName))\n            setSavedMaps([...savedMaps, mapName]);\n        setShowSettings(false);\n    };\n\n    return (\n        <Modal show={showSettings} onHide={handleCloseSettings} size=\"lg\">\n            <Modal.Header>\n                <Modal.Title>Gestion des coordonnées</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"row g-3 align-items-end\" noValidate>\n                    <div className=\"col\">\n                        <label className=\"form-label\" htmlFor=\"mapName\">\n                            Nom de la carte :\n                        </label>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            id=\"mapName\"\n                            value={mapName}\n                            onChange={(e) => setMapName(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <hr className=\"my-4\" />\n\n                <div className=\"row g-3 align-items-end\" noValidate>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"latDeg\">\n                            Degré\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"latDeg\"\n                                value={latDeg}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, -90, 90) &&\n                                    setLatDeg(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>°</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"latMin\">\n                            Minutes\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"latMin\"\n                                value={latMin}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLatMin(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>'</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"latSec\">\n                            Secondes\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"latSec\"\n                                value={latSec}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLatSec(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>\"</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <label className=\"form-label\" htmlFor=\"latitude\">\n                            Latitude\n                        </label>\n                        <div\n                            name=\"latitude\"\n                            className=\"btn-group\"\n                            role=\"group\"\n                            aria-label=\"Basic radio toggle button group\"\n                        >\n                            <input\n                                className=\"btn-check\"\n                                type=\"radio\"\n                                id=\"latRadioN\"\n                                value=\"N\"\n                                autoComplete=\"off\"\n                                checked={latRad === \"N\"}\n                                onChange={(e) => setLatRad(e.target.value)}\n                            />\n                            <label\n                                className=\"btn btn-outline-primary\"\n                                htmlFor=\"latRadioN\"\n                            >\n                                Nord\n                            </label>\n\n                            <input\n                                className=\"btn-check\"\n                                type=\"radio\"\n                                id=\"latRadioS\"\n                                value=\"S\"\n                                autoComplete=\"off\"\n                                checked={latRad === \"S\"}\n                                onChange={(e) => setLatRad(e.target.value)}\n                            />\n                            <label\n                                className=\"btn btn-outline-primary\"\n                                htmlFor=\"latRadioS\"\n                            >\n                                Sud\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <hr className=\"my-4\" />\n\n                <div className=\"row g-3 align-items-end\" noValidate>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"lonDeg\">\n                            Degré\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"lonDeg\"\n                                value={lonDeg}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, -180, 180) &&\n                                    setLonDeg(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>°</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"lonMin\">\n                            Minutes\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"lonMin\"\n                                value={lonMin}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLonMin(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>'</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"lonSec\">\n                            Secondes\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"lonSec\"\n                                value={lonSec}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLonSec(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>\"</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <label className=\"form-label\" htmlFor=\"latitude\">\n                            Longitude\n                        </label>\n                        <div\n                            className=\"btn-group\"\n                            name=\"latitude\"\n                            role=\"group\"\n                            aria-label=\"Basic radio toggle button group\"\n                        >\n                            <input\n                                className=\"btn-check\"\n                                type=\"radio\"\n                                id=\"lonRadioE\"\n                                value=\"E\"\n                                autoComplete=\"off\"\n                                checked={lonRad === \"E\"}\n                                onChange={(e) => setLonRad(e.target.value)}\n                            />\n                            <label\n                                className=\"btn btn-outline-primary\"\n                                htmlFor=\"lonRadioE\"\n                            >\n                                Est\n                            </label>\n                            <input\n                                className=\"btn-check\"\n                                type=\"radio\"\n                                id=\"lonRadioO\"\n                                value=\"O\"\n                                autoComplete=\"off\"\n                                checked={lonRad === \"O\"}\n                                onChange={(e) => setLonRad(e.target.value)}\n                            />\n                            <label\n                                className=\"btn btn-outline-primary\"\n                                htmlFor=\"lonRadioO\"\n                            >\n                                Ouest\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <hr className=\"my-4\" />\n\n                <div className=\"row g-3 align-items-end\" noValidate>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"latDistDeg\">\n                            Degré latitude\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"latDistDeg\"\n                                value={latDistDeg}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, -180, 180) &&\n                                    setLatDistDeg(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>°</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"latDistMin\">\n                            Minutes latitude\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"latDistMin\"\n                                value={latDistMin}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLatDistMin(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>'</b>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <hr className=\"my-4\" />\n\n                <div className=\"row g-3 align-items-end\" noValidate>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"lonDistDeg\">\n                            Degré longitude\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"lonDistDeg\"\n                                value={lonDistDeg}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, -180, 180) &&\n                                    setLonDistDeg(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>°</b>\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label className=\"form-label\" htmlFor=\"lonDistMin\">\n                            Minutes longitude\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                id=\"lonDistMin\"\n                                value={lonDistMin}\n                                onChange={(e) =>\n                                    isBetween(e.target.value, 0, 60) &&\n                                    setLonDistMin(e.target.value)\n                                }\n                            />\n                            <span className=\"input-group-text\">\n                                <b>'</b>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <hr className=\"my-4\" />\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <label className=\"form-label\" htmlFor=\"mapZoom\">\n                            Zoom :\n                        </label>\n                        <select\n                            className=\"form-control\"\n                            id=\"mapZoom\"\n                            value={mapZoom}\n                            onChange={(e) => setMapZoom(e.target.value)}\n                        >\n                            <option value=\"10\">1:500 000</option>\n                            <option value=\"11\">1:250 000</option>\n                            <option value=\"12\">1:150 000</option>\n                            <option value=\"13\">1:70 000</option>\n                            <option value=\"14\">1:35 000</option>\n                            <option value=\"15\">1:15 000</option>\n                            <option value=\"16\">1:8 000</option>\n                            <option value=\"17\">1:4 000</option>\n                            <option value=\"18\">1:2 000</option>\n                        </select>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={handleCloseSettings}>\n                    Annuler\n                </Button>\n                <Button variant=\"success\" onClick={applySettings}>\n                    Valider\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nconst fs = window.require(\"fs\");\nconsole.log({ fs });\nconst request = require(\"request\");\nconsole.log({ request });\nconst shelljs = require(\"shelljs\");\nconsole.log({ shelljs });\n\n/**\n * TODO :\n * Quand on valide une coordonnées, cela rajoute à savedMaps, le nom de la carte, & ça créé le dossier\n * Faire la lecture quand on clique sur une map\n */\n\nexport const LoadMapModal = (props) => {\n    const {\n        show,\n        mapArrayState,\n        mapNameState,\n        savedMapsState,\n        isStoredMapState,\n        storedMapState\n    } = props;\n    const [isStoredMap, setIsStoredMap] = isStoredMapState;\n    const [mapName, setMapName] = mapNameState;\n    const [mapArray, setMapArray] = mapArrayState;\n    const [showLoadMap, setShowLoadMap] = show;\n    const [savedMaps, setSavedMaps] = savedMapsState;\n    const [storedMapName, setStoredMapName] = storedMapState;\n    const handleCloseLoadMap = () => setShowLoadMap(false);\n\n    // To call when mapArray changes\n    const download = (uri, filename, callback) => {\n        request.head(uri, () => {\n            request(uri)\n                .pipe(fs.createWriteStream(filename))\n                .on(\"close\", callback);\n        });\n    };\n\n    const done = () => console.log(\"terminado\");\n\n    useEffect(() => {\n        if (!isStoredMap) {\n            mapArray.map((row, rowIndex) => {\n                row.map((cell, cellIndex) => {\n                    download(\n                        `https://a.tile.openstreetmap.fr/osmfr/${cell[0]}/${cell[1]}/${cell[2]}.png`,\n                        \"cartes/\" +\n                            mapName +\n                            \"/openstreetmap/\" +\n                            rowIndex +\n                            \"_\" +\n                            cellIndex +\n                            \".png\",\n                        done\n                    );\n                    download(\n                        `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`,\n                        \"cartes/\" +\n                            mapName +\n                            \"/openseamap/\" +\n                            rowIndex +\n                            \"_\" +\n                            cellIndex +\n                            \".png\",\n                        done\n                    );\n                });\n            });\n        }\n    }, [mapArray]);\n\n    useEffect(() => {\n        const saveCurrentMap = async () => {\n            if (mapArray.length) {\n                var data_file = \"cartes/\" + mapName + \"/informations.txt\";\n                var content_file =\n                    \"zoom=\" +\n                    mapArray[0][0][0] +\n                    \":latSize=\" +\n                    mapArray.length +\n                    \":lonSize=\" +\n                    mapArray[0].length;\n                await fs.mkdir(\"cartes/\" + mapName, (err) => {\n                    if (err) throw err;\n\n                    console.log(\"The dir street was succesfully created!\");\n                });\n                await fs.mkdir(\n                    \"cartes/\" + mapName + \"/openstreetmap\",\n                    (err) => {\n                        if (err) throw err;\n\n                        console.log(\"The dir street was succesfully created!\");\n                    }\n                );\n                await fs.mkdir(\"cartes/\" + mapName + \"/openseamap\", (err) => {\n                    if (err) throw err;\n\n                    console.log(\"The dir sea was succesfully created!\");\n                });\n                await fs.writeFile(data_file, content_file, (err) => {\n                    if (err) throw err;\n\n                    console.log(\"The file was succesfully saved!\");\n                });\n            }\n        };\n        saveCurrentMap();\n    }, [savedMaps]);\n    /*validateCoordinates.click(() => {\n        var titre_carte = $(\"#titre_carte\").val();\n        var zoom_carte = $(\"#zoom\").val();\n        var size_carte = $(\"#size\").val();\n\n        var data_file = \"cartes/\" + titre_carte + \"/informations.txt\";\n        var content_file = \"zoom=\" + zoom_carte + \":size=\" + size_carte;\n        console.log(data_file);\n        shelljs.mkdir(\"-p\", \"cartes/\" + titre_carte + \"/openstreetmap\");\n        shelljs.mkdir(\"-p\", \"cartes/\" + titre_carte + \"/openseamap\");\n\n        fs.writeFile(data_file, content_file, (err) => {\n            if (err) throw err;\n\n            console.log(\"The file was succesfully saved!\");\n        });\n\n        const mapData = gatherFormParams();\n        const formattedMapData = formatMapData(mapData);\n        renderMap(formattedMapData, titre_carte);\n    });*/\n\n    /*chargeCard.click(() => {});\n\n    const handleValidate = () => {\n        const cardName = $(\"input[name='saveCarte']\").val();\n        const dataFilePath = \"cartes/\" + cardName + \"/informations.txt\";\n\n        fs.readFile(dataFilePath, \"utf8\", function (err, data) {\n            if (err) {\n                return console.log(err);\n            }\n\n            let dataFile = data;\n\n            const zoomCarte = dataFile.split(\":\")[0].split(\"=\")[1];\n            const sizeCarte = dataFile.split(\":\")[1].split(\"=\")[1];\n\n            for (let i = 0; i < sizeCarte; i++) {\n                map.append(\"<tr>\");\n\n                for (let j = 0; j < sizeCarte; j++) {\n                    map.append(\n                        \"<td style ='background-image: url(\" +\n                            DIRNAME +\n                            \"/cartes/\" +\n                            cardName +\n                            \"/openstreetmap/\" +\n                            j +\n                            \"_\" +\n                            i +\n                            \".png);'>\" +\n                            \"<img  src='\" +\n                            DIRNAME +\n                            \"/cartes/\" +\n                            cardName +\n                            \"/openseamap/\" +\n                            j +\n                            \"_\" +\n                            i +\n                            \".png'></td>\"\n                    );\n                }\n            }\n        });\n    };*/\n\n    const [currentlySelectedMapName, setCurrentlySelectedMapName] =\n        useState(\"\");\n\n    useEffect(() => {\n        setCurrentlySelectedMapName(savedMaps[0]);\n    }, [savedMaps]);\n    console.log(currentlySelectedMapName);\n\n    const handleValidate = () => {\n        /*console.log(savedMaps);\n        console.log(mapName);\n*/\n        // Créer mapArray à partir des directory\n        console.log(currentlySelectedMapName);\n        setStoredMapName(currentlySelectedMapName);\n\n        const dataFilePath =\n            \"cartes/\" + currentlySelectedMapName + \"/informations.txt\";\n\n        fs.readFile(dataFilePath, \"utf8\", function (err, data) {\n            if (err) {\n                return console.log(err);\n            }\n\n            let zoom = data.split(\":\")[0].split(\"=\")[1];\n            let latSize = data.split(\":\")[1].split(\"=\")[1];\n            let lonSize = data.split(\":\")[2].split(\"=\")[1];\n\n            const newMapArray = [];\n            for (let i = 0; i <= latSize - 1; ++i) {\n                newMapArray[i] = [];\n                for (let j = 0; j <= lonSize - 1; ++j) {\n                    newMapArray[i][j] = [i, j];\n                }\n            }\n            setMapArray(newMapArray);\n            setIsStoredMap(true);\n            /*\n            const zoomCarte = dataFile.split(\":\")[0].split(\"=\")[1];\n            const sizeCarte = dataFile.split(\":\")[1].split(\"=\")[1];\n\n            for (let i = 0; i < sizeCarte; i++) {\n                map.append(\"<tr>\");\n\n                for (let j = 0; j < sizeCarte; j++) {\n                    map.append(\n                        \"<td style ='background-image: ./cartes/\" +\n                            cardName +\n                            \"/openstreetmap/\" +\n                            j +\n                            \"_\" +\n                            i +\n                            \".png);'>\" +\n                            \"<img  src='\" +\n                            DIRNAME +\n                            \"/cartes/\" +\n                            cardName +\n                            \"/openseamap/\" +\n                            j +\n                            \"_\" +\n                            i +\n                            \".png'></td>\"\n                    );\n                }\n            }*/\n        });\n\n        handleCloseLoadMap();\n    };\n\n    return (\n        <Modal show={showLoadMap} onHide={handleCloseLoadMap} size=\"lg\">\n            <Modal.Header>\n                <Modal.Title>Charger une carte</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Nom</Form.Label>\n                        <Form.Control\n                            disabled={!savedMaps.length}\n                            as=\"select\"\n                            value={currentlySelectedMapName}\n                            onChange={(e) =>\n                                setCurrentlySelectedMapName(e.target.value)\n                            }\n                        >\n                            {!savedMaps.length ? (\n                                <option>Pas de carte sauvegardée</option>\n                            ) : (\n                                savedMaps.map((currMapName) => (\n                                    <option>{currMapName}</option>\n                                ))\n                            )}\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={handleCloseLoadMap}>\n                    Annuler\n                </Button>\n                <Button\n                    variant=\"success\"\n                    disabled={!savedMaps.length}\n                    onClick={handleValidate}\n                >\n                    Valider Carte\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { SettingsModal } from \"./Modals/SettingsModal\";\nimport { LoadMapModal } from \"./Modals/LoadMapModal\";\nconst fs = window.require(\"fs\");\n\nexport const Modals = (props) => {\n    const {\n        settingsModal,\n        loadMapModal,\n        mapArrayState,\n        isStoredMapState,\n        setMapSettingsData,\n        mapNameState,\n        storedMapState\n    } = props;\n    const [mapName, setMapName] = mapNameState;\n    const [savedMaps, setSavedMaps] = useState([]);\n    const [mapArray, setMapArray] = mapArrayState;\n    const [hasLoadedMapDir, setHasLoadedMapDir] = useState(false);\n\n    // Charge toutes les cartes enregistrées dans le disque\n    useEffect(() => {\n        if (!hasLoadedMapDir) {\n            const loadStoredMaps = async () => {\n                const localMapArray = [];\n                await fs.readdir(\"cartes/\", (_, fileList) => {\n                    console.log({ fileList });\n                    fileList.forEach((file) => {\n                        localMapArray.push(file);\n                    });\n                });\n                console.log({ localMapArray });\n                setSavedMaps(localMapArray);\n            };\n            loadStoredMaps();\n            setHasLoadedMapDir(true);\n        }\n    }, [hasLoadedMapDir]);\n    const [isStoredMap, setIsStoredMap] = isStoredMapState;\n\n    return (\n        <>\n            <LoadMapModal\n                show={loadMapModal}\n                mapArrayState={[mapArray, setMapArray]}\n                isStoredMapState={isStoredMapState}\n                mapNameState={[mapName, setMapName]}\n                savedMapsState={[savedMaps, setSavedMaps]}\n                storedMapState={storedMapState}\n            />\n            <SettingsModal\n                setMapSettingsData={setMapSettingsData}\n                show={settingsModal}\n                setMapArray={setMapArray}\n                mapNameState={[mapName, setMapName]}\n                savedMapsState={[savedMaps, setSavedMaps]}\n                setIsStoredMap={setIsStoredMap}\n            />\n        </>\n    );\n};\n","import { Canvas } from \"./components/Canvas\";\nimport { SeaMap } from \"./components/SeaMap\";\nimport { TopBar } from \"./components/TopBar\";\nimport { Modals } from \"./components/Modals\";\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nexport const App = () => {\n    const [showSettings, setShowSettings] = useState(false);\n    const [showLoadMap, setShowLoadMap] = useState(false);\n    const [mapArray, setMapArray] = useState([]);\n    const [isStoredMap, setIsStoredMap] = useState(true);\n    const [mapSettingsData, setMapSettingsData] = useState({});\n    const [mapName, setMapName] = useState(\"\");\n    const [storedMapName, setStoredMapName] = useState(\"\");\n    console.log({ isStoredMap });\n    console.log({ mapName });\n    console.log({ storedMapName });\n    const [amer, setAmer] = useState(false);\n\n    useEffect(() => {\n        let x = 0;\n        let y = 0;\n        let html = document.documentElement;\n        const ele = document.getElementById(\"dragMap\");\n        const mouseDownHandler = (e) => {\n            x = e.clientX;\n            y = e.clientY;\n            document.addEventListener(\"mousemove\", mouseMoveHandler);\n            document.addEventListener(\"mouseup\", mouseUpHandler);\n            ele.style.cursor = \"grabbing\";\n            ele.style.userSelect = \"none\";\n        };\n\n        const mouseMoveHandler = (e) => {\n            if (ele.offsetLeft > 0) {\n                ele.style.left = \"0px\";\n                return;\n            }\n            if (ele.offsetTop > 0) {\n                ele.style.top = \"0px\";\n                return;\n            }\n            if (html.scrollHeight == html.clientHeight) {\n                ele.style.top = `${ele.offsetTop + 1}px`;\n                return;\n            }\n            if (html.scrollWidth == html.clientWidth) {\n                ele.style.left = `${ele.offsetLeft + 1}px`;\n                return;\n            }\n\n            const dx = e.clientX - x;\n            const dy = e.clientY - y;\n            ele.style.top = `${ele.offsetTop + dy * 0.3}px`;\n            ele.style.left = `${ele.offsetLeft + dx * 0.3}px`;\n            x = e.clientX;\n            y = e.clientY;\n        };\n\n        const mouseUpHandler = () => {\n            document.removeEventListener(\"mousemove\", mouseMoveHandler);\n            document.removeEventListener(\"mouseup\", mouseUpHandler);\n            ele.style.cursor = \"grab\";\n            ele.style.removeProperty(\"user-select\");\n        };\n\n        ele.addEventListener(\"mousedown\", mouseDownHandler);\n    });\n\n    return (\n        <>\n            <TopBar\n                setShowSettings={setShowSettings}\n                setShowLoadMap={setShowLoadMap}\n                amerState={[amer, setAmer]}\n            />\n            <Modals\n                settingsModal={[showSettings, setShowSettings]}\n                loadMapModal={[showLoadMap, setShowLoadMap]}\n                isStoredMapState={[isStoredMap, setIsStoredMap]}\n                mapArrayState={[mapArray, setMapArray]}\n                setMapSettingsData={setMapSettingsData}\n                mapNameState={[mapName, setMapName]}\n                storedMapState={[storedMapName, setStoredMapName]}\n            />\n            <div id=\"dragMap\" className=\"draggable\">\n                <SeaMap\n                    mapArray={mapArray}\n                    isStoredMap={isStoredMap}\n                    mapSettingsData={mapSettingsData}\n                    storedMapName={storedMapName}\n                />\n                <Canvas amer={amer} mapArray={mapArray} />\n            </div>\n        </>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport fs from \"fs\";\nconsole.log({ fs });\n\nconst renderReactDom = () => {\n    ReactDOM.render(<App />, document.getElementById(\"root\"));\n};\n\nif (window.cordova) {\n    document.addEventListener(\n        \"deviceready\",\n        () => {\n            renderReactDom();\n        },\n        false\n    );\n} else {\n    renderReactDom();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}