{"version":3,"sources":["../node_modules/shelljs/src sync /^/.*$","components/Map.jsx","components/TopBar.jsx","helpers/helpers.js","helpers/GenerateMap.js","components/Modals/SettingsModal.jsx","components/Modals/LoadMapModal.jsx","components/Modals.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Map","props","mapArray","isStoredMap","mapName","MAPPATH","cellSpacing","cellPadding","style","border","row","rowIndex","cell","cellIndex","backgroundImage","src","renderTooltip","title","Tooltip","TopBar","setShowSettings","setShowLoadMap","Navbar","sticky","className","bg","href","OverlayTrigger","placement","overlay","Button","variant","onClick","icon","faMapMarkedAlt","size","faSave","faLifeRing","faPencilRuler","faQuestion","isBetween","value","lower","higher","getCenterTile","zoom","degLatitude","degLongitude","parseInt","Math","asinh","tan","PI","convertToDecimalDegre","latitude","longitude","decimalDegreLatitude","deg","min","sec","decimalDegreLongitude","orientation","generateTileArray","centerTileCoords","tileArray","Array","end","start","add","abs","i","j","SettingsModal","show","setMapArray","mapNameState","savedMapsState","savedMaps","setSavedMaps","showSettings","setMapName","useState","latDeg","setLatDeg","latMin","setLatMin","latSec","setLatSec","latRad","setLatRad","lonDeg","setLonDeg","lonMin","setLonMin","lonSec","setLonSec","lonRad","setLonRad","mapZoom","setMapZoom","mapSize","setMapSize","handleCloseSettings","Modal","onHide","Header","Title","Body","noValidate","htmlFor","type","onChange","target","name","role","aria-label","autoComplete","checked","Footer","data","generateMapArray","find","savedMap","fs","window","require","console","log","request","shelljs","LoadMapModal","mapArrayState","showLoadMap","handleCloseLoadMap","useEffect","Form","Group","Label","Control","disabled","length","as","currMapName","Modals","settingsModal","loadMapModal","isStoredMapState","App","setIsStoredMap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener"],"mappings":"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","file":"static/js/main.1e224856.chunk.js","sourcesContent":["var map = {\n\t\"./cat\": 247,\n\t\"./cat.js\": 247,\n\t\"./cd\": 147,\n\t\"./cd.js\": 147,\n\t\"./chmod\": 248,\n\t\"./chmod.js\": 248,\n\t\"./common\": 12,\n\t\"./common.js\": 12,\n\t\"./cp\": 148,\n\t\"./cp.js\": 148,\n\t\"./dirs\": 249,\n\t\"./dirs.js\": 249,\n\t\"./echo\": 250,\n\t\"./echo.js\": 250,\n\t\"./error\": 149,\n\t\"./error.js\": 149,\n\t\"./exec\": 251,\n\t\"./exec-child\": 252,\n\t\"./exec-child.js\": 252,\n\t\"./exec.js\": 251,\n\t\"./find\": 253,\n\t\"./find.js\": 253,\n\t\"./grep\": 254,\n\t\"./grep.js\": 254,\n\t\"./head\": 255,\n\t\"./head.js\": 255,\n\t\"./ln\": 256,\n\t\"./ln.js\": 256,\n\t\"./ls\": 152,\n\t\"./ls.js\": 152,\n\t\"./mkdir\": 257,\n\t\"./mkdir.js\": 257,\n\t\"./mv\": 258,\n\t\"./mv.js\": 258,\n\t\"./popd\": 259,\n\t\"./popd.js\": 259,\n\t\"./pushd\": 260,\n\t\"./pushd.js\": 260,\n\t\"./pwd\": 151,\n\t\"./pwd.js\": 151,\n\t\"./rm\": 153,\n\t\"./rm.js\": 153,\n\t\"./sed\": 261,\n\t\"./sed.js\": 261,\n\t\"./set\": 262,\n\t\"./set.js\": 262,\n\t\"./sort\": 263,\n\t\"./sort.js\": 263,\n\t\"./tail\": 264,\n\t\"./tail.js\": 264,\n\t\"./tempdir\": 150,\n\t\"./tempdir.js\": 150,\n\t\"./test\": 265,\n\t\"./test.js\": 265,\n\t\"./to\": 266,\n\t\"./to.js\": 266,\n\t\"./toEnd\": 267,\n\t\"./toEnd.js\": 267,\n\t\"./touch\": 268,\n\t\"./touch.js\": 268,\n\t\"./uniq\": 269,\n\t\"./uniq.js\": 269,\n\t\"./which\": 270,\n\t\"./which.js\": 270\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 520;","import \"./Map.css\";\r\n\r\nexport const Map = (props) => {\r\n    const { mapArray, isStoredMap, mapName, MAPPATH } = props;\r\n\r\n    return (\r\n        <div>\r\n            <table cellSpacing=\"0\" cellPadding=\"0\" style={{ border: \"none\" }}>\r\n                <tbody>\r\n                    {mapArray.map((row, rowIndex) => {\r\n                        return (\r\n                            <tr key={rowIndex}>\r\n                                {row.map((cell, cellIndex) => {\r\n                                    return (\r\n                                        <td\r\n                                            key={cellIndex}\r\n                                            style={{\r\n                                                backgroundImage: isStoredMap\r\n                                                    ? `url(${MAPPATH}/cartes/${mapName}/openstreetmap/${cell[1]}_${cell[2]}.png)`\r\n                                                    : `url(https://a.tile.openstreetmap.fr/osmfr/${cell[0]}/${cell[1]}/${cell[2]}.png)`\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={\r\n                                                    isStoredMap\r\n                                                        ? `url(${MAPPATH}/cartes/${mapName}/openstreetmap/${cell[1]}_${cell[2]}.png)`\r\n                                                        : `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, Navbar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faLifeRing,\r\n    faMapMarkedAlt,\r\n    faPencilRuler,\r\n    faQuestion,\r\n    faSave\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./TopBar.css\";\r\n\r\nconst renderTooltip = (title) => <Tooltip id=\"button-tooltip\">{title}</Tooltip>;\r\n\r\nexport const TopBar = (props) => {\r\n    const { setShowSettings, setShowLoadMap } = props;\r\n\r\n    const handleShowSettings = () => setShowSettings(true);\r\n    const handleShowLoadMap = () => setShowLoadMap(true);\r\n\r\n    return (\r\n        <Navbar sticky=\"top\" className=\"navbar-dark\" bg=\"dark\">\r\n            <div className=\"topbar-container\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    &nbsp;&nbsp;Assistance Navigation Maritime\r\n                </a>\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={renderTooltip(\"Gérer les coordonnées\")}\r\n                >\r\n                    <Button variant=\"primary\" onClick={handleShowSettings}>\r\n                        <FontAwesomeIcon icon={faMapMarkedAlt} size=\"lg\" />\r\n                    </Button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={renderTooltip(\"Charger une carte\")}\r\n                >\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        className=\"spacedButton\"\r\n                        onClick={handleShowLoadMap}\r\n                    >\r\n                        <FontAwesomeIcon icon={faSave} size=\"lg\" />\r\n                    </Button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={renderTooltip(\"Placer un amer\")}\r\n                >\r\n                    <Button variant=\"primary\" className=\"spacedButton\">\r\n                        <FontAwesomeIcon icon={faLifeRing} size=\"lg\" />\r\n                    </Button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={renderTooltip(\"Tracer une route\")}\r\n                >\r\n                    <Button variant=\"primary\" className=\"spacedButton\">\r\n                        <FontAwesomeIcon icon={faPencilRuler} size=\"lg\" />\r\n                    </Button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={renderTooltip(\"Aide\")}\r\n                >\r\n                    <Button variant=\"primary\" className=\"spacedButton\">\r\n                        <FontAwesomeIcon icon={faQuestion} size=\"lg\" />\r\n                    </Button>\r\n                </OverlayTrigger>\r\n            </div>\r\n        </Navbar>\r\n    );\r\n};\r\n","export const isBetween = (value, lower, higher) => value >= lower && value <= higher; ","export const generateMapArray = (data) => {\r\n    const { latitude, longitude, zoom, size } = data;\r\n\r\n    const { decimalDegreLatitude, decimalDegreLongitude } =\r\n        convertToDecimalDegre(latitude, longitude);\r\n\r\n    const centerTileCoords = getCenterTile(\r\n        zoom,\r\n        decimalDegreLatitude,\r\n        decimalDegreLongitude\r\n    );\r\n\r\n    return generateTileArray(centerTileCoords, zoom, size);\r\n};\r\n\r\n/**\r\n * Fonction permettant de convertir des degrés en numéro de la Tile centrale pour préparer\r\n * les appels à l'API OpenStreetMap et OpenSeaMap\r\n * @param {Le zoom que l'on veut appliquer à la carte} zoom\r\n * @param {Le degré de latitude} degLatitude\r\n * @param {Le degré de longitude} degLongitude\r\n * @returns Un tableau avec les 2 paramètres nécessaires aux appels l'API OpenStreetMap et OpenSeaMap\r\n */\r\nconst getCenterTile = (zoom, degLatitude, degLongitude) => [\r\n    parseInt(((degLongitude + 180.0) / 360.0) * 2.0 ** zoom),\r\n    parseInt(\r\n        ((1.0 - Math.asinh(Math.tan(degLatitude * (Math.PI / 180))) / Math.PI) /\r\n            2.0) *\r\n            2.0 ** zoom\r\n    )\r\n];\r\n\r\n/**\r\n * Fonction permettant de convertir des DMS (Degré, Minutes, Secondes) en DD (Degré Decimaux)\r\n * @param {La latitude à convertir en DD} latitude\r\n * @param {La longitude à convertir en DD} longitude\r\n * @returns Les coordonnées DMS converties en DD\r\n */\r\nconst convertToDecimalDegre = (latitude, longitude) => {\r\n    const decimalDegreLatitude =\r\n        parseInt(latitude.deg) +\r\n        (latitude.min * 60 + parseInt(latitude.sec)) / 3600;\r\n    const decimalDegreLongitude =\r\n        parseInt(longitude.deg) +\r\n        (longitude.min * 60 + parseInt(longitude.sec)) / 3600;\r\n\r\n    return {\r\n        decimalDegreLatitude:\r\n            latitude.orientation === \"S\"\r\n                ? -decimalDegreLatitude\r\n                : decimalDegreLatitude,\r\n        decimalDegreLongitude:\r\n            longitude.orientation === \"O\"\r\n                ? -decimalDegreLongitude\r\n                : decimalDegreLongitude\r\n    };\r\n};\r\n\r\n/**\r\n * Créé le tableau contenant les coordonnées de toutes les tiles\r\n * @param {Les coordonnées de la taille centrale} centerTileCoords\r\n * @param {Le zoom de la carte} zoom\r\n * @param {La taille de la carte} size\r\n * @returns\r\n */\r\nconst generateTileArray = (centerTileCoords, zoom, size) => {\r\n    const tileArray = [...Array(size)].map(() => Array(size));\r\n\r\n    const end = (size / 2) >> 0;\r\n    const start = size % 2 !== 0 ? -end : -(end - 1);\r\n    const add = size % 2 !== 0 ? end : Math.abs(start);\r\n\r\n    for (let i = start; i <= end; ++i)\r\n        for (let j = start; j <= end; ++j)\r\n            tileArray[j + add][i + add] = [\r\n                zoom,\r\n                centerTileCoords[0] + i,\r\n                centerTileCoords[1] + j\r\n            ];\r\n\r\n    return tileArray;\r\n};\r\n","import { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { isBetween } from \"../../helpers/helpers\";\r\nimport { generateMapArray } from \"../../helpers/GenerateMap\";\r\n\r\nexport const SettingsModal = (props) => {\r\n    const { show, setMapArray, mapNameState, savedMapsState } = props;\r\n    const [savedMaps, setSavedMaps] = savedMapsState;\r\n    const [showSettings, setShowSettings] = show;\r\n    const [mapName, setMapName] = mapNameState;\r\n\r\n    // Latitude\r\n    const [latDeg, setLatDeg] = useState(\"0\");\r\n    const [latMin, setLatMin] = useState(\"0\");\r\n    const [latSec, setLatSec] = useState(\"0\");\r\n    const [latRad, setLatRad] = useState(\"N\");\r\n\r\n    // Longitude\r\n    const [lonDeg, setLonDeg] = useState(\"0\");\r\n    const [lonMin, setLonMin] = useState(\"0\");\r\n    const [lonSec, setLonSec] = useState(\"0\");\r\n    const [lonRad, setLonRad] = useState(\"O\");\r\n\r\n    // Footer\r\n    const [mapZoom, setMapZoom] = useState(\"10\");\r\n    const [mapSize, setMapSize] = useState(\"6\");\r\n\r\n    const handleCloseSettings = () => setShowSettings(false);\r\n    const applySettings = () => {\r\n        const mapArray = generateMapArray({\r\n            latitude: {\r\n                deg: latDeg,\r\n                min: latMin,\r\n                sec: latSec,\r\n                orientation: latRad\r\n            },\r\n            longitude: {\r\n                deg: lonDeg,\r\n                min: lonMin,\r\n                sec: lonSec,\r\n                orientation: lonRad\r\n            },\r\n            zoom: parseInt(mapZoom),\r\n            size: parseInt(mapSize)\r\n        });\r\n        setMapArray(mapArray);\r\n        if (!savedMaps.find((savedMap) => savedMap === mapName))\r\n            setSavedMaps([...savedMaps, mapName]);\r\n        setShowSettings(false);\r\n    };\r\n\r\n    return (\r\n        <Modal show={showSettings} onHide={handleCloseSettings} size=\"lg\">\r\n            <Modal.Header>\r\n                <Modal.Title>Gestion des coordonnées</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col\">\r\n                        <label className=\"form-label\" htmlFor=\"mapName\">\r\n                            Nom de la carte :\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"mapName\"\r\n                            value={mapName}\r\n                            onChange={(e) => setMapName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latDeg\">\r\n                            Degré\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latDeg\"\r\n                                value={latDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -90, 90) &&\r\n                                    setLatDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latMin\">\r\n                            Minutes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latMin\"\r\n                                value={latMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLatMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latSec\">\r\n                            Secondes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latSec\"\r\n                                value={latSec}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLatSec(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>\"</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <label className=\"form-label\" htmlFor=\"latitude\">\r\n                            Latitude\r\n                        </label>\r\n                        <div\r\n                            name=\"latitude\"\r\n                            className=\"btn-group\"\r\n                            role=\"group\"\r\n                            aria-label=\"Basic radio toggle button group\"\r\n                        >\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"latRadioN\"\r\n                                value=\"N\"\r\n                                autoComplete=\"off\"\r\n                                checked={latRad === \"N\"}\r\n                                onChange={(e) => setLatRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"latRadioN\"\r\n                            >\r\n                                Nord\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"latRadioS\"\r\n                                value=\"S\"\r\n                                autoComplete=\"off\"\r\n                                checked={latRad === \"S\"}\r\n                                onChange={(e) => setLatRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"latRadioS\"\r\n                            >\r\n                                Sud\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonDeg\">\r\n                            Degré\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonDeg\"\r\n                                value={lonDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -180, 180) &&\r\n                                    setLonDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonMin\">\r\n                            Minutes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonMin\"\r\n                                value={lonMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLonMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonSec\">\r\n                            Secondes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonSec\"\r\n                                value={lonSec}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLonSec(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>\"</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <label className=\"form-label\" htmlFor=\"latitude\">\r\n                            Longitude\r\n                        </label>\r\n                        <div\r\n                            className=\"btn-group\"\r\n                            name=\"latitude\"\r\n                            role=\"group\"\r\n                            aria-label=\"Basic radio toggle button group\"\r\n                        >\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"lonRadioO\"\r\n                                value=\"O\"\r\n                                autoComplete=\"off\"\r\n                                checked={lonRad === \"O\"}\r\n                                onChange={(e) => setLonRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"lonRadioO\"\r\n                            >\r\n                                Ouest\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"lonRadioE\"\r\n                                value=\"E\"\r\n                                autoComplete=\"off\"\r\n                                checked={lonRad === \"E\"}\r\n                                onChange={(e) => setLonRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"lonRadioE\"\r\n                            >\r\n                                Est\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"form-label\" htmlFor=\"mapZoom\">\r\n                            Zoom :\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            id=\"mapZoom\"\r\n                            value={mapZoom}\r\n                            onChange={(e) =>\r\n                                isBetween(e.target.value, 6, 18) &&\r\n                                setMapZoom(e.target.value)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"form-label\" htmlFor=\"mapSize\">\r\n                            Taille de la carte :\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            min=\"2\"\r\n                            type=\"number\"\r\n                            value={mapSize}\r\n                            onChange={(e) =>\r\n                                isBetween(e.target.value, 2, 20) &&\r\n                                setMapSize(e.target.value)\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={handleCloseSettings}>\r\n                    Annuler\r\n                </Button>\r\n                <Button variant=\"success\" onClick={applySettings}>\r\n                    Valider\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nconst fs = window.require(\"fs\");\r\nconsole.log({ fs });\r\nconst request = require(\"request\");\r\nconsole.log({ request });\r\nconst shelljs = require(\"shelljs\");\r\nconsole.log({ shelljs });\r\n\r\n/**\r\n * TODO :\r\n * Quand on valide une coordonnées, cela rajoute à savedMaps, le nom de la carte, & ça créé le dossier\r\n * Faire la lecture quand on clique sur une map\r\n */\r\n\r\n// TODO à changer\r\nconst DIRNAME = \"./\";\r\nconst FOLDER = DIRNAME + \"cartes\";\r\n\r\nexport const LoadMapModal = (props) => {\r\n    const { show, mapArrayState, mapNameState, savedMapsState } = props;\r\n    const [mapName, setMapName] = mapNameState;\r\n    const [mapArray, setMapArray] = mapArrayState;\r\n    const [showLoadMap, setShowLoadMap] = show;\r\n    const [savedMaps, setSavedMaps] = savedMapsState;\r\n    const handleCloseLoadMap = () => setShowLoadMap(false);\r\n\r\n    // To call when mapArray changes\r\n    const download = (uri, filename, callback) => {\r\n        /*request.head(uri, () => {\r\n            request(uri)\r\n                .pipe(fs.createWriteStream(filename))\r\n                .on(\"close\", callback);\r\n        });*/\r\n    };\r\n\r\n    const done = () => console.log(\"terminado\");\r\n\r\n    /*useEffect(() => {\r\n        mapArray.map((row, rowIndex) => {\r\n            row.map((cell, cellIndex) => {\r\n                download(\r\n                    `https://a.tile.openstreetmap.fr/osmfr/${cell[0]}/${cell[1]}/${cell[2]}.png`,\r\n                    \"cartes/\" +\r\n                        mapName +\r\n                        \"/openstreetmap/\" +\r\n                        rowIndex +\r\n                        \"_\" +\r\n                        cellIndex +\r\n                        \".png\",\r\n                    done\r\n                );\r\n                download(\r\n                    `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`,\r\n                    \"cartes/\" +\r\n                        mapName +\r\n                        \"/openseamap/\" +\r\n                        rowIndex +\r\n                        \"_\" +\r\n                        cellIndex +\r\n                        \".png\",\r\n                    done\r\n                );\r\n            });\r\n        });\r\n    }, [mapArray]);*/\r\n\r\n    /*validateCoordinates.click(() => {\r\n        var titre_carte = $(\"#titre_carte\").val();\r\n        var zoom_carte = $(\"#zoom\").val();\r\n        var size_carte = $(\"#size\").val();\r\n\r\n        var data_file = \"cartes/\" + titre_carte + \"/informations.txt\";\r\n        var content_file = \"zoom=\" + zoom_carte + \":size=\" + size_carte;\r\n        console.log(data_file);\r\n        shelljs.mkdir(\"-p\", \"cartes/\" + titre_carte + \"/openstreetmap\");\r\n        shelljs.mkdir(\"-p\", \"cartes/\" + titre_carte + \"/openseamap\");\r\n\r\n        fs.writeFile(data_file, content_file, (err) => {\r\n            if (err) throw err;\r\n\r\n            console.log(\"The file was succesfully saved!\");\r\n        });\r\n\r\n        const mapData = gatherFormParams();\r\n        const formattedMapData = formatMapData(mapData);\r\n        renderMap(formattedMapData, titre_carte);\r\n    });*/\r\n\r\n    // Charge toutes les cartes enregistrées dans le disque\r\n    useEffect(() => {\r\n        console.log(fs);\r\n        /*fs.readdir(FOLDER, (_, fileList) => {\r\n            fileList.forEach((file) => {\r\n                setSavedMaps([...savedMaps, file]);\r\n            });\r\n        });*/\r\n    });\r\n\r\n    /*chargeCard.click(() => {});\r\n\r\n    const handleValidate = () => {\r\n        const cardName = $(\"input[name='saveCarte']\").val();\r\n        const dataFilePath = \"cartes/\" + cardName + \"/informations.txt\";\r\n\r\n        fs.readFile(dataFilePath, \"utf8\", function (err, data) {\r\n            if (err) {\r\n                return console.log(err);\r\n            }\r\n\r\n            let dataFile = data;\r\n\r\n            const zoomCarte = dataFile.split(\":\")[0].split(\"=\")[1];\r\n            const sizeCarte = dataFile.split(\":\")[1].split(\"=\")[1];\r\n\r\n            for (let i = 0; i < sizeCarte; i++) {\r\n                map.append(\"<tr>\");\r\n\r\n                for (let j = 0; j < sizeCarte; j++) {\r\n                    map.append(\r\n                        \"<td style ='background-image: url(\" +\r\n                            DIRNAME +\r\n                            \"/cartes/\" +\r\n                            cardName +\r\n                            \"/openstreetmap/\" +\r\n                            j +\r\n                            \"_\" +\r\n                            i +\r\n                            \".png);'>\" +\r\n                            \"<img  src='\" +\r\n                            DIRNAME +\r\n                            \"/cartes/\" +\r\n                            cardName +\r\n                            \"/openseamap/\" +\r\n                            j +\r\n                            \"_\" +\r\n                            i +\r\n                            \".png'></td>\"\r\n                    );\r\n                }\r\n            }\r\n        });\r\n    };*/\r\n\r\n    const handleValidate = () => {\r\n        console.log(savedMaps);\r\n    };\r\n\r\n    return (\r\n        <Modal show={showLoadMap} onHide={handleCloseLoadMap} size=\"lg\">\r\n            <Modal.Header>\r\n                <Modal.Title>Charger une carte</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Nom</Form.Label>\r\n                        <Form.Control disabled={!savedMaps.length} as=\"select\">\r\n                            {!savedMaps.length ? (\r\n                                <option>Pas de carte sauvegardée</option>\r\n                            ) : (\r\n                                savedMaps.map((currMapName) => (\r\n                                    <option>{currMapName}</option>\r\n                                ))\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={handleCloseLoadMap}>\r\n                    Annuler\r\n                </Button>\r\n                <Button variant=\"success\" onClick={handleValidate}>\r\n                    Valider Carte\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n","import { useState } from \"react\";\r\nimport { SettingsModal } from \"./Modals/SettingsModal\";\r\nimport { LoadMapModal } from \"./Modals/LoadMapModal\";\r\n\r\nexport const Modals = (props) => {\r\n    const { settingsModal, loadMapModal, mapArrayState, isStoredMapState } =\r\n        props;\r\n    const [mapName, setMapName] = useState(\"\");\r\n    const [savedMaps, setSavedMaps] = useState([]);\r\n    const [mapArray, setMapArray] = mapArrayState;\r\n    return (\r\n        <>\r\n            <LoadMapModal\r\n                show={loadMapModal}\r\n                mapArrayState={[mapArray, setMapArray]}\r\n                isStoredMapState={isStoredMapState}\r\n                mapNameState={[mapName, setMapName]}\r\n                savedMapsState={[savedMaps, setSavedMaps]}\r\n            />\r\n            <SettingsModal\r\n                show={settingsModal}\r\n                setMapArray={setMapArray}\r\n                mapNameState={[mapName, setMapName]}\r\n                savedMapsState={[savedMaps, setSavedMaps]}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import { Canvas } from \"./components/Canvas\";\r\nimport { Map } from \"./components/Map\";\r\nimport { TopBar } from \"./components/TopBar\";\r\nimport { Modals } from \"./components/Modals\";\r\nimport { useState } from \"react\";\r\n\r\nexport const App = () => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [showLoadMap, setShowLoadMap] = useState(false);\r\n    const [mapArray, setMapArray] = useState([]);\r\n    const [isStoredMap, setIsStoredMap] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <TopBar\r\n                setShowSettings={setShowSettings}\r\n                setShowLoadMap={setShowLoadMap}\r\n            />\r\n            <Modals\r\n                settingsModal={[showSettings, setShowSettings]}\r\n                loadMapModal={[showLoadMap, setShowLoadMap]}\r\n                isStoredMapState={[isStoredMap, setIsStoredMap]}\r\n                mapArrayState={[mapArray, setMapArray]}\r\n            />\r\n            <Map mapArray={mapArray} isStoredMap={isStoredMap} />\r\n        </>\r\n    );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport fs from \"fs\";\r\nconsole.log({ fs });\r\n\r\nconst renderReactDom = () => {\r\n    ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nif (window.cordova) {\r\n    document.addEventListener(\r\n        \"deviceready\",\r\n        () => {\r\n            renderReactDom();\r\n        },\r\n        false\r\n    );\r\n} else {\r\n    renderReactDom();\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}