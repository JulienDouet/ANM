{"version":3,"sources":["../node_modules/shelljs/src sync /^/.*$","regle-cras.png","helpers/helpers.js","components/Canvas.jsx","helpers/GenerateMap.js","components/SeaMap.jsx","components/TopBar.jsx","components/Modals/SettingsModal.jsx","components/Modals/LoadMapModal.jsx","components/Modals.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isBetween","value","lower","higher","Canvas","props","mapArray","amer","useState","show","setShow","handleClose","angleVal","setAngleVal","longueurVal","setLongueurVal","deviation","setDeviation","declinaison","setDeclinaison","x1","y1","r","angle","drawLineData","setDrawLineData","amerCanvasRef","useRef","useEffect","length","amerCanvas","current","height","width","drawAndPlaceCRA","regle","Image","src","image","alt","context","getContext","onload","save","translate","rotate","Math","PI","drawImage","restore","parseInt","ref","className","onClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","setCoordinates","Modal","onHide","size","centered","Header","Title","Body","Form","Label","htmlFor","Control","onChange","target","type","placeholder","Footer","Button","variant","moveTo","lineTo","cos","sin","stroke","drawLine","getCenterTile","zoom","degLatitude","degLongitude","degLatDist","degLongDist","asinh","tan","getBeginLastTile","beginLatDegree","beginLongDegree","lastLatDegree","lastLongDegree","convertToDecimalDegre","latitude","longitude","latitudeDistance","longitudeDistance","decimalDegreLatitude","deg","min","sec","decimalDegreLongitude","decimalDegreLatitudeDistance","decimalDegreLongitudeDistance","orientation","generateTileArray","centerTileCoords","beginLastCoords","beginLatTile","beginLongTile","lastLatTile","lastLongTile","sizeLatitude","sizeLongitude","tileArray","Array","i","j","SeaMap","isStoredMap","mapSettingsData","storedMapName","tableRef","canvasGraticuleRef","cellSpacing","cellPadding","style","border","row","rowIndex","cell","cellIndex","renderTooltip","title","Tooltip","TopBar","setShowSettings","setShowLoadMap","amerState","setAmer","Navbar","sticky","position","bg","href","OverlayTrigger","placement","overlay","icon","faMapMarkedAlt","faSave","faLifeRing","faPencilRuler","faQuestion","SettingsModal","setMapArray","mapNameState","savedMapsState","setMapSettingsData","setIsStoredMap","savedMaps","setSavedMaps","showSettings","mapName","setMapName","latDeg","setLatDeg","latMin","setLatMin","latSec","setLatSec","latRad","setLatRad","lonDeg","setLonDeg","lonMin","setLonMin","lonSec","setLonSec","lonRad","setLonRad","lonDistDeg","setLonDistDeg","lonDistMin","setLonDistMin","latDistDeg","setLatDistDeg","latDistMin","setLatDistMin","mapZoom","setMapZoom","handleCloseSettings","noValidate","name","role","aria-label","autoComplete","checked","data","generateMapArray","console","log","find","savedMap","fs","window","require","request","shelljs","LoadMapModal","mapArrayState","isStoredMapState","storedMapState","showLoadMap","setStoredMapName","currentlySelectedMapName","setCurrentlySelectedMapName","handleCloseLoadMap","download","uri","filename","callback","head","pipe","createWriteStream","on","done","a","data_file","content_file","mkdir","err","writeFile","saveCurrentMap","Group","disabled","as","currMapName","selectedMapName","dataFilePath","readFile","split","latSize","lonSize","newMapArray","handleValidate","Modals","settingsModal","loadMapModal","hasLoadedMapDir","setHasLoadedMapDir","localMapArray","readdir","_","fileList","forEach","file","push","loadStoredMaps","App","hasScrollListener","setHasScrollListener","ele","document","getElementById","x","y","html","documentElement","mouseMoveHandler","offsetLeft","offsetTop","scrollHeight","clientHeight","scrollWidth","clientWidth","dx","dy","mouseUpHandler","removeEventListener","cursor","removeProperty","addEventListener","userSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderReactDom","ReactDOM","render","cordova"],"mappings":"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","file":"static/js/main.3c4c8627.chunk.js","sourcesContent":["var map = {\n\t\"./cat\": 250,\n\t\"./cat.js\": 250,\n\t\"./cd\": 151,\n\t\"./cd.js\": 151,\n\t\"./chmod\": 251,\n\t\"./chmod.js\": 251,\n\t\"./common\": 13,\n\t\"./common.js\": 13,\n\t\"./cp\": 152,\n\t\"./cp.js\": 152,\n\t\"./dirs\": 252,\n\t\"./dirs.js\": 252,\n\t\"./echo\": 253,\n\t\"./echo.js\": 253,\n\t\"./error\": 153,\n\t\"./error.js\": 153,\n\t\"./exec\": 254,\n\t\"./exec-child\": 255,\n\t\"./exec-child.js\": 255,\n\t\"./exec.js\": 254,\n\t\"./find\": 256,\n\t\"./find.js\": 256,\n\t\"./grep\": 257,\n\t\"./grep.js\": 257,\n\t\"./head\": 258,\n\t\"./head.js\": 258,\n\t\"./ln\": 259,\n\t\"./ln.js\": 259,\n\t\"./ls\": 156,\n\t\"./ls.js\": 156,\n\t\"./mkdir\": 260,\n\t\"./mkdir.js\": 260,\n\t\"./mv\": 261,\n\t\"./mv.js\": 261,\n\t\"./popd\": 262,\n\t\"./popd.js\": 262,\n\t\"./pushd\": 263,\n\t\"./pushd.js\": 263,\n\t\"./pwd\": 155,\n\t\"./pwd.js\": 155,\n\t\"./rm\": 157,\n\t\"./rm.js\": 157,\n\t\"./sed\": 264,\n\t\"./sed.js\": 264,\n\t\"./set\": 265,\n\t\"./set.js\": 265,\n\t\"./sort\": 266,\n\t\"./sort.js\": 266,\n\t\"./tail\": 267,\n\t\"./tail.js\": 267,\n\t\"./tempdir\": 154,\n\t\"./tempdir.js\": 154,\n\t\"./test\": 268,\n\t\"./test.js\": 268,\n\t\"./to\": 269,\n\t\"./to.js\": 269,\n\t\"./toEnd\": 270,\n\t\"./toEnd.js\": 270,\n\t\"./touch\": 271,\n\t\"./touch.js\": 271,\n\t\"./uniq\": 272,\n\t\"./uniq.js\": 272,\n\t\"./which\": 273,\n\t\"./which.js\": 273\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 525;","export default __webpack_public_path__ + \"static/media/regle-cras.38c0b4c7.png\";","export const isBetween = (value, lower, higher) => value >= lower && value <= higher;\r\nexport const degToRadian = (degrees) => { return degrees * (Math.PI / 180); }","import \"./Canvas.css\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport image from \"../regle-cras.png\";\r\nimport { degToRadian } from \"../helpers/helpers\";\r\n\r\n// Valeur pour prendre le nord en référence comme 0°\r\nconst DEFAULT_ANGLE = 90;\r\nconst CALIBRAGE_ZERO_ROUGE = -0.0845;\r\nconst CALIBRAGE_ZERO_NOIR = -0.9155;\r\n\r\nexport const Canvas = (props) => {\r\n    const { mapArray, amer } = props;\r\n\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    // Angle et Longueur\r\n    const [angleVal, setAngleVal] = useState(\"0\");\r\n    const [longueurVal, setLongueurVal] = useState(\"200\");\r\n\r\n    // Déviation et Déclinaison\r\n    const [deviation, setDeviation] = useState(\"0\");\r\n    const [declinaison, setDeclinaison] = useState(\"0\");\r\n\r\n    // Donnée pour tracer le trait\r\n    const [drawLineData, setDrawLineData] = useState({\r\n        x1: 0,\r\n        y1: 0,\r\n        r: 0,\r\n        angle: 0 - DEFAULT_ANGLE\r\n    });\r\n\r\n    const amerCanvasRef = useRef(null);\r\n    useEffect(() => {\r\n        if (mapArray.length) {\r\n            const amerCanvas = amerCanvasRef.current;\r\n\r\n            amerCanvas.height = mapArray.length * 256;\r\n            amerCanvas.width = mapArray[0].length * 256;\r\n        }\r\n    }, [mapArray]);\r\n\r\n    // Récupérer coordonnées clique\r\n    /**\r\n     *\r\n     */\r\n    const drawLine = () => {\r\n        const context = amerCanvasRef.current.getContext(\"2d\");\r\n        context.moveTo(drawLineData.x1, drawLineData.y1);\r\n        context.lineTo(\r\n            drawLineData.x1 +\r\n                drawLineData.r * Math.cos((Math.PI * drawLineData.angle) / 180),\r\n            drawLineData.y1 +\r\n                drawLineData.r * Math.sin((Math.PI * drawLineData.angle) / 180)\r\n        );\r\n        context.stroke();\r\n    };\r\n\r\n    const drawPoint = (x, y, color) => {\r\n        const context = amerCanvasRef.current.getContext(\"2d\");\r\n        context.fillStyle = color || \"black\";\r\n        context.beginPath();\r\n        context.arc(x, y, 5, 0, 2 * Math.PI, true);\r\n        context.fill();\r\n    };\r\n\r\n    /**\r\n     *\r\n     */\r\n    // Règle de cras\r\n    // Pour obtenir le milieu de la règle : -(regle.width / 2)\r\n    // Pour obtenir le point 0 du rapporteur (rouge) : CALIBRAGE_ZERO_ROUGE * regle.height\r\n    // Pour obtenir le point 0 du rapporteur (noir) : CALIBRAGE_ZERO_NOIR * regle.height\r\n    const drawAndPlaceCRA = () => {\r\n        // var regle = document.createElement('img');\r\n        var regle = new Image();\r\n        regle.src = image;\r\n        regle.alt = \"alt text\";\r\n\r\n        const context = amerCanvasRef.current.getContext(\"2d\");\r\n\r\n        regle.onload = function () {\r\n            context.save();\r\n            context.translate(drawLineData.x1, drawLineData.y1);\r\n            context.rotate(degToRadian(angleVal - DEFAULT_ANGLE));\r\n\r\n            if (angleVal >= 180) {\r\n                context.drawImage(regle, -(regle.width / 2), 0);\r\n            } else {\r\n                context.drawImage(regle, -(regle.width / 2), 0);\r\n            }\r\n\r\n            context.restore();\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        setDrawLineData({\r\n            ...drawLineData,\r\n            angle:\r\n                parseInt(angleVal, 10) +\r\n                parseInt(deviation, 10) +\r\n                parseInt(declinaison, 10) -\r\n                DEFAULT_ANGLE\r\n        });\r\n    }, [angleVal]);\r\n\r\n    useEffect(() => {\r\n        setDrawLineData({ ...drawLineData, r: longueurVal });\r\n    }, [longueurVal]);\r\n\r\n    const handleOnSubmit = (event) => {\r\n        drawLine();\r\n        drawAndPlaceCRA();\r\n        handleClose();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {L'évènement} event\r\n     */\r\n    const setCoordinates = (event) => {\r\n        setShow(true);\r\n        const rect = amerCanvasRef.current.getBoundingClientRect();\r\n        setDrawLineData({\r\n            ...drawLineData,\r\n            x1: event.clientX - rect.left,\r\n            y1: event.clientY - rect.top,\r\n            r: longueurVal\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <canvas\r\n                id=\"canvas\"\r\n                ref={amerCanvasRef}\r\n                className=\"canvas-style mt-5\"\r\n                onClick={(e) => !!amer && setCoordinates(e)}\r\n            ></canvas>\r\n\r\n            <Modal show={show} onHide={handleClose} size=\"sm\" centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>Relever l'amer</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Label htmlFor=\"angle\">Angle</Form.Label>\r\n                    <Form.Control\r\n                        className=\"mb-2 mr-sm-2\"\r\n                        id=\"angle\"\r\n                        value={angleVal}\r\n                        onChange={(e) => setAngleVal(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Angle\"\r\n                    />\r\n                    <Form.Label htmlFor=\"longueur\">Longueur</Form.Label>\r\n                    <Form.Control\r\n                        className=\"mb-2 mr-sm-2\"\r\n                        id=\"longueur\"\r\n                        value={longueurVal}\r\n                        onChange={(e) => setLongueurVal(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Longueur\"\r\n                    />\r\n                    <Form.Label htmlFor=\"declinaison\">\r\n                        Déclinaison (D)\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        className=\"mb-2 mr-sm-2\"\r\n                        id=\"declinaison\"\r\n                        value={declinaison}\r\n                        onChange={(e) => setDeclinaison(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Déclinaison\"\r\n                    />\r\n                    <Form.Label htmlFor=\"deviation\">Déviation (d)</Form.Label>\r\n                    <Form.Control\r\n                        className=\"mb-2 mr-sm-2\"\r\n                        id=\"deviation\"\r\n                        value={deviation}\r\n                        onChange={(e) => setDeviation(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Déviation\"\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Annuler\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleOnSubmit}>\r\n                        Valider le marquage\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","export const generateMapArray = (data) => {\r\n    const { latitude, longitude, latitudeDistance, longitudeDistance, zoom, size } = data;\r\n\r\n\r\n    const { decimalDegreLatitude, decimalDegreLongitude, decimalDegreLatitudeDistance, decimalDegreLongitudeDistance } =\r\n        convertToDecimalDegre(latitude, longitude,latitudeDistance, longitudeDistance);\r\n\r\n\r\n    const centerTileCoords = getCenterTile(\r\n        zoom,\r\n        decimalDegreLatitude,\r\n        decimalDegreLongitude,\r\n        decimalDegreLatitudeDistance,\r\n        decimalDegreLongitudeDistance\r\n    );\r\n\r\n    const beginLastCoords = getBeginLastTile(\r\n        zoom,\r\n        decimalDegreLatitude,\r\n        decimalDegreLongitude,\r\n        decimalDegreLatitudeDistance,\r\n        decimalDegreLongitudeDistance\r\n    );\r\n    \r\n    return generateTileArray(centerTileCoords, beginLastCoords, zoom, size);\r\n};\r\n\r\n/**\r\n * Fonction permettant de convertir des degrés en numéro de la Tile centrale pour préparer\r\n * les appels à l'API OpenStreetMap et OpenSeaMap\r\n * @param {Le zoom que l'on veut appliquer à la carte} zoom\r\n * @param {Le degré de latitude} degLatitude\r\n * @param {Le degré de longitude} degLongitude\r\n * @returns Un tableau avec les 2 paramètres nécessaires aux appels l'API OpenStreetMap et OpenSeaMap\r\n */\r\nconst getCenterTile = (zoom, degLatitude, degLongitude, degLatDist, degLongDist) => [\r\n    parseInt(\r\n        ((1.0 - Math.asinh(Math.tan(degLatitude * (Math.PI / 180))) / Math.PI) /\r\n            2.0) *\r\n            2.0 ** zoom\r\n    ),\r\n    parseInt(((degLongitude + 180.0) / 360.0) * 2.0 ** zoom),\r\n    parseInt(\r\n        ((1.0 - Math.asinh(Math.tan(degLatDist * (Math.PI / 180))) / Math.PI) /\r\n            2.0) *\r\n            2.0 ** zoom\r\n    ),\r\n    parseInt(((degLongDist + 180.0) / 360.0) * 2.0 ** zoom)\r\n\r\n];\r\n\r\nconst getBeginLastTile = (zoom, degLatitude, degLongitude, degLatDist, degLongDist) => {\r\n\r\n  const beginLatDegree = degLatitude - degLatDist;\r\n  const beginLongDegree = degLongitude - degLongDist;\r\n\r\n  const lastLatDegree = degLatitude + degLatDist;\r\n  const lastLongDegree = degLongitude + degLongDist;\r\n\r\n\r\n\r\n  const beginLatTile = parseInt(\r\n          ((1.0 - Math.asinh(Math.tan(beginLatDegree * (Math.PI / 180))) / Math.PI) /\r\n              2.0) *\r\n              2.0 ** zoom\r\n      );\r\n\r\n  const beginLongTile = parseInt(((beginLongDegree + 180.0) / 360.0) * 2.0 ** zoom);\r\n\r\n\r\n  const lastLatTile = parseInt(\r\n          ((1.0 - Math.asinh(Math.tan(lastLatDegree * (Math.PI / 180))) / Math.PI) /\r\n              2.0) *\r\n              2.0 ** zoom\r\n      );\r\n\r\n  const lastLongTile = parseInt(((lastLongDegree + 180.0) / 360.0) * 2.0 ** zoom);\r\n\r\nreturn [beginLatTile, beginLongTile, lastLatTile, lastLongTile];\r\n};\r\n\r\n\r\n/**\r\n * Fonction permettant de convertir des DMS (Degré, Minutes, Secondes) en DD (Degré Decimaux)\r\n * @param {La latitude à convertir en DD} latitude\r\n * @param {La longitude à convertir en DD} longitude\r\n * @returns Les coordonnées DMS converties en DD\r\n */\r\nexport const convertToDecimalDegre = (latitude, longitude, latitudeDistance, longitudeDistance) => {\r\n    const decimalDegreLatitude =\r\n        parseInt(latitude.deg) +\r\n        (latitude.min * 60 + parseInt(latitude.sec)) / 3600;\r\n    const decimalDegreLongitude =\r\n        parseInt(longitude.deg) +\r\n        (longitude.min * 60 + parseInt(longitude.sec)) / 3600;\r\n\r\n    const decimalDegreLatitudeDistance =\r\n        parseInt(latitudeDistance.deg) +\r\n        (latitudeDistance.min * 60)/3600;\r\n\r\n    const decimalDegreLongitudeDistance =\r\n        parseInt(longitudeDistance.deg) +\r\n        (longitudeDistance.min * 60)/3600;\r\n\r\n\r\n    return {\r\n        decimalDegreLatitude:\r\n            latitude.orientation === \"S\"\r\n                ? -decimalDegreLatitude\r\n                : decimalDegreLatitude,\r\n        decimalDegreLongitude:\r\n            longitude.orientation === \"O\"\r\n                ? -decimalDegreLongitude\r\n                : decimalDegreLongitude,\r\n        decimalDegreLatitudeDistance,\r\n        decimalDegreLongitudeDistance\r\n\r\n    };\r\n};\r\n\r\n/**\r\n * Créé le tableau contenant les coordonnées de toutes les tiles\r\n * @param {Les coordonnées de la taille centrale} centerTileCoords\r\n * @param {Le zoom de la carte} zoom\r\n * @param {La taille de la carte} size\r\n * @returns\r\n */\r\nconst generateTileArray = (centerTileCoords, beginLastCoords, zoom, size) => {\r\n\r\n\r\n\r\n    const beginLatTile = beginLastCoords[0];\r\n    const beginLongTile = beginLastCoords[1];\r\n\r\n    const lastLatTile = beginLastCoords[2];\r\n    const lastLongTile = beginLastCoords[3];\r\n\r\n    const sizeLatitude = beginLatTile - lastLatTile ;\r\n    const sizeLongitude = lastLongTile - beginLongTile ;\r\n\r\n    const tileArray = [...Array(sizeLatitude + 1)].map(() => Array(sizeLongitude + 1));\r\n\r\n    const latitudeDistance = (sizeLatitude / 2) >> 0;\r\n    const longitudeDistance = (sizeLongitude / 2) >> 0;\r\n\r\n\r\n\r\n    /*\r\n    const end = (size / 2) >> 0;\r\n    const start = size % 2 !== 0 ? -end : -(end - 1);\r\n    const add = size % 2 !== 0 ? end : Math.abs(start);\r\n    */\r\n    for (let i = beginLongTile; i <= lastLongTile; ++i){\r\n        for (let j = lastLatTile; j <= beginLatTile; ++j){\r\n            tileArray[j - lastLatTile][i - beginLongTile] = [\r\n                zoom,\r\n                 i,\r\n                 j\r\n            ];\r\n          }\r\n        }\r\n    return tileArray;\r\n};\r\n\r\n\r\nexport function deg_to_dms (dd, isLng) {\r\n  var dir = dd < 0\r\n     ? isLng ? 'O' : 'S'\r\n     : isLng ? 'E' : 'N';\r\n\r\n   var absDd = Math.abs(dd);\r\n   var deg = absDd | 0;\r\n   var frac = absDd - deg;\r\n   var min = (frac * 60) | 0;\r\n   var sec = frac * 3600 - min * 60;\r\n   // Round it to 2 decimal points.\r\n   sec = Math.round(sec * 100) / 100;\r\n   return deg + \"°\" + min + \"'\" + sec + '\"' + dir;\r\n}\r\n","import \"./SeaMap.css\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { convertToDecimalDegre } from \"../helpers/GenerateMap\";\r\nimport { deg_to_dms } from \"../helpers/GenerateMap\";\r\n// Récupérer coordonnées clique\r\n/*const drawLine = (tableRef, canvasGraticuleRef, scrollContainerRef) => {\r\n    const context = canvasGraticuleRef.current.getContext(\"2d\");\r\n    const canvasGraticule = canvasGraticuleRef.current;\r\n    const scrollContainer = scrollContainerRef.current;\r\n\r\n    canvasGraticule.height = tableRef.current.offsetHeight;\r\n    canvasGraticule.width = tableRef.current.offsetWidth;\r\n    scrollContainer.height = tableRef.current.offsetHeight;\r\n    scrollContainer.width = tableRef.current.offsetWidth;\r\n\r\n    for (var i = 0; i < canvasGraticule.width; i += 150) {\r\n        context.moveTo(i, 0);\r\n        context.lineTo(i, canvasGraticule.height);\r\n        context.stroke();\r\n    }\r\n};*/\r\n\r\n// Grille\r\nconst drawLine = (tableRef, canvasGraticuleRef, mapSettingsData, mapArray) => {\r\n    const context = canvasGraticuleRef.current.getContext(\"2d\");\r\n    const canvasGraticule = canvasGraticuleRef.current;\r\n\r\n    const latitude = mapSettingsData.latitude;\r\n    const longitude = mapSettingsData.longitude;\r\n\r\n    const latitudeDistance = mapSettingsData.latitudeDistance;\r\n    const longitudeDistance = mapSettingsData.longitudeDistance;\r\n\r\n    const zoom = mapSettingsData.zoom;\r\n\r\n    const longitudeString =\r\n        longitude.deg +\r\n        \"° \" +\r\n        longitude.min +\r\n        \"' \" +\r\n        longitude.sec +\r\n        '\" ' +\r\n        longitude.orientation;\r\n\r\n    const {\r\n        decimalDegreLatitude,\r\n        decimalDegreLongitude,\r\n        decimalDegreLatitudeDistance,\r\n        decimalDegreLongitudeDistance\r\n    } = convertToDecimalDegre(\r\n        latitude,\r\n        longitude,\r\n        latitudeDistance,\r\n        longitudeDistance\r\n    );\r\n\r\n    const diffDegLongitude =\r\n        decimalDegreLongitude - decimalDegreLongitudeDistance;\r\n    const diffDegLatitude = decimalDegreLatitude + decimalDegreLatitudeDistance;\r\n\r\n    canvasGraticule.height = mapArray.length * 256;\r\n    canvasGraticule.width = mapArray[0].length * 256;\r\n\r\n    var height = mapArray.length * 256;\r\n    var width = mapArray[0].length * 256;\r\n\r\n    var longitudeDegDepart = diffDegLongitude;\r\n    for (var i = 0; i < width; i += width / 2 / 6) {\r\n        context.moveTo(i, 0);\r\n        context.lineTo(i, height);\r\n        context.stroke();\r\n        context.font = \"15px Arial\";\r\n        context.fillText(deg_to_dms(longitudeDegDepart, true), i, 20);\r\n        longitudeDegDepart += decimalDegreLongitudeDistance / 6;\r\n    }\r\n\r\n    var latitudeDegDepart = diffDegLatitude;\r\n    for (var i = 0; i < height; i += height / 2 / 6) {\r\n        context.moveTo(0, i);\r\n        context.lineTo(width, i);\r\n        context.stroke();\r\n        context.font = \"15px Arial\";\r\n        context.fillText(deg_to_dms(latitudeDegDepart, false), 10, i);\r\n        latitudeDegDepart -= decimalDegreLatitudeDistance / 6;\r\n    }\r\n};\r\n\r\nexport const SeaMap = (props) => {\r\n    const { mapArray, mapSettingsData, isStoredMap, storedMapName } = props;\r\n\r\n    //Ref\r\n    const tableRef = useRef(null);\r\n    const canvasGraticuleRef = useRef(null);\r\n\r\n    return (\r\n        <div>\r\n            <canvas\r\n                ref={canvasGraticuleRef}\r\n                className=\"canvas-style-gaticule mt-5\"\r\n            ></canvas>\r\n            <table\r\n                id=\"map\"\r\n                ref={tableRef}\r\n                className=\"mt-5\"\r\n                cellSpacing=\"0\"\r\n                cellPadding=\"0\"\r\n                style={{ border: \"none\" }}\r\n            >\r\n                <tbody>\r\n                    {mapArray.map((row, rowIndex) => {\r\n                        return (\r\n                            <tr key={rowIndex}>\r\n                                {row.map((cell, cellIndex) => {\r\n                                    if (\r\n                                        cellIndex == row.length - 1 &&\r\n                                        rowIndex == mapArray.length - 1\r\n                                    ) {\r\n                                        /*drawLine(\r\n                                            tableRef,\r\n                                            canvasGraticuleRef,\r\n                                            mapSettingsData,\r\n                                            mapArray\r\n                                        );*/\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className=\"mapArrayCell\"\r\n                                            key={cellIndex}\r\n                                        >\r\n                                            <img\r\n                                                alt=\"\"\r\n                                                src={\r\n                                                    isStoredMap\r\n                                                        ? `../../../cartes/${storedMapName}/openstreetmap/${cell[0]}_${cell[1]}.png`\r\n                                                        : `https://a.tile.openstreetmap.fr/osmfr/${cell[0]}/${cell[1]}/${cell[2]}.png`\r\n                                                }\r\n                                            />\r\n                                            <img\r\n                                                alt=\"\"\r\n                                                className=\"overlayed\"\r\n                                                src={\r\n                                                    isStoredMap\r\n                                                        ? `../../../cartes/${storedMapName}/openseamap/${cell[0]}_${cell[1]}.png`\r\n                                                        : `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n","import {\r\n    Button,\r\n    Navbar,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    Toast\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faLifeRing,\r\n    faMapMarkedAlt,\r\n    faPencilRuler,\r\n    faQuestion,\r\n    faSave\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./TopBar.css\";\r\n\r\nconst renderTooltip = (title) => <Tooltip id=\"button-tooltip\">{title}</Tooltip>;\r\n\r\nexport const TopBar = (props) => {\r\n    const { setShowSettings, setShowLoadMap, amerState } = props;\r\n    const [amer, setAmer] = amerState;\r\n\r\n    const handleShowSettings = () => setShowSettings(true);\r\n    const handleShowLoadMap = () => setShowLoadMap(true);\r\n    const handleAmerState = () => setAmer(!amer);\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                sticky=\"top\"\r\n                className=\"navbar-dark\"\r\n                style={{ position: \"fixed\", width: \"100%\" }}\r\n                bg=\"dark\"\r\n            >\r\n                <div className=\"topbar-container\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        &nbsp;&nbsp;Assistance Navigation Maritime\r\n                    </a>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={renderTooltip(\"Gérer les coordonnées\")}\r\n                    >\r\n                        <Button variant=\"primary\" onClick={handleShowSettings}>\r\n                            <FontAwesomeIcon icon={faMapMarkedAlt} size=\"lg\" />\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={renderTooltip(\"Charger une carte\")}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            className=\"spacedButton\"\r\n                            onClick={handleShowLoadMap}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSave} size=\"lg\" />\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={renderTooltip(\"Placer un amer\")}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            className=\"spacedButton\"\r\n                            onClick={handleAmerState}\r\n                        >\r\n                            <FontAwesomeIcon icon={faLifeRing} size=\"lg\" />\r\n                            {!!amer ? \" ON\" : \" OFF\"}\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={renderTooltip(\"Tracer une route\")}\r\n                    >\r\n                        <Button variant=\"primary\" className=\"spacedButton\">\r\n                            <FontAwesomeIcon icon={faPencilRuler} size=\"lg\" />\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={renderTooltip(\"Aide\")}\r\n                    >\r\n                        <Button variant=\"primary\" className=\"spacedButton\">\r\n                            <FontAwesomeIcon icon={faQuestion} size=\"lg\" />\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n","import { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { isBetween } from \"../../helpers/helpers\";\r\nimport { generateMapArray } from \"../../helpers/GenerateMap\";\r\n\r\nexport const SettingsModal = (props) => {\r\n    const {\r\n        show,\r\n        setMapArray,\r\n        mapNameState,\r\n        savedMapsState,\r\n        setMapSettingsData,\r\n        setIsStoredMap\r\n    } = props;\r\n    const [savedMaps, setSavedMaps] = savedMapsState;\r\n    const [showSettings, setShowSettings] = show;\r\n    const [mapName, setMapName] = mapNameState;\r\n\r\n    // Latitude\r\n    const [latDeg, setLatDeg] = useState(\"47\");\r\n    const [latMin, setLatMin] = useState(\"25\");\r\n    const [latSec, setLatSec] = useState(\"0\");\r\n    const [latRad, setLatRad] = useState(\"N\");\r\n\r\n    // Longitude\r\n    const [lonDeg, setLonDeg] = useState(\"2\");\r\n    const [lonMin, setLonMin] = useState(\"50\");\r\n    const [lonSec, setLonSec] = useState(\"0\");\r\n    const [lonRad, setLonRad] = useState(\"O\");\r\n\r\n    // Distance Longitude\r\n    const [lonDistDeg, setLonDistDeg] = useState(\"0\");\r\n    const [lonDistMin, setLonDistMin] = useState(\"15\");\r\n\r\n    // Distance Latitude\r\n    const [latDistDeg, setLatDistDeg] = useState(\"0\");\r\n    const [latDistMin, setLatDistMin] = useState(\"15\");\r\n\r\n    // Footer\r\n    const [mapZoom, setMapZoom] = useState(\"13\");\r\n\r\n    const handleCloseSettings = () => setShowSettings(false);\r\n    const applySettings = () => {\r\n        const mapArray = generateMapArray({\r\n            latitude: {\r\n                deg: latDeg,\r\n                min: latMin,\r\n                sec: latSec,\r\n                orientation: latRad\r\n            },\r\n            longitude: {\r\n                deg: lonDeg,\r\n                min: lonMin,\r\n                sec: lonSec,\r\n                orientation: lonRad\r\n            },\r\n            longitudeDistance: {\r\n                deg: lonDistDeg,\r\n                min: lonDistMin\r\n            },\r\n            latitudeDistance: {\r\n                deg: latDistDeg,\r\n                min: latDistMin\r\n            },\r\n            zoom: parseInt(mapZoom)\r\n        });\r\n        console.log(\"changement de isStored à false\");\r\n        setIsStoredMap(false);\r\n        setMapSettingsData({\r\n            latitude: {\r\n                deg: latDeg,\r\n                min: latMin,\r\n                sec: latSec,\r\n                orientation: latRad\r\n            },\r\n            longitude: {\r\n                deg: lonDeg,\r\n                min: lonMin,\r\n                sec: lonSec,\r\n                orientation: lonRad\r\n            },\r\n            longitudeDistance: {\r\n                deg: lonDistDeg,\r\n                min: lonDistMin\r\n            },\r\n            latitudeDistance: {\r\n                deg: latDistDeg,\r\n                min: latDistMin\r\n            },\r\n            zoom: parseInt(mapZoom),\r\n            name: mapName\r\n        });\r\n        setMapArray(mapArray);\r\n        if (!savedMaps.find((savedMap) => savedMap === mapName))\r\n            setSavedMaps([...savedMaps, mapName]);\r\n        setShowSettings(false);\r\n    };\r\n\r\n    return (\r\n        <Modal show={showSettings} onHide={handleCloseSettings} size=\"lg\">\r\n            <Modal.Header>\r\n                <Modal.Title>Gestion des coordonnées</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col\">\r\n                        <label className=\"form-label\" htmlFor=\"mapName\">\r\n                            Nom de la carte :\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"mapName\"\r\n                            value={mapName}\r\n                            onChange={(e) => setMapName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latDeg\">\r\n                            Degré\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latDeg\"\r\n                                value={latDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -90, 90) &&\r\n                                    setLatDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latMin\">\r\n                            Minutes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latMin\"\r\n                                value={latMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLatMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latSec\">\r\n                            Secondes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latSec\"\r\n                                value={latSec}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLatSec(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>\"</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <label className=\"form-label\" htmlFor=\"latitude\">\r\n                            Latitude\r\n                        </label>\r\n                        <div\r\n                            name=\"latitude\"\r\n                            className=\"btn-group\"\r\n                            role=\"group\"\r\n                            aria-label=\"Basic radio toggle button group\"\r\n                        >\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"latRadioN\"\r\n                                value=\"N\"\r\n                                autoComplete=\"off\"\r\n                                checked={latRad === \"N\"}\r\n                                onChange={(e) => setLatRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"latRadioN\"\r\n                            >\r\n                                Nord\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"latRadioS\"\r\n                                value=\"S\"\r\n                                autoComplete=\"off\"\r\n                                checked={latRad === \"S\"}\r\n                                onChange={(e) => setLatRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"latRadioS\"\r\n                            >\r\n                                Sud\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonDeg\">\r\n                            Degré\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonDeg\"\r\n                                value={lonDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -180, 180) &&\r\n                                    setLonDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonMin\">\r\n                            Minutes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonMin\"\r\n                                value={lonMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLonMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonSec\">\r\n                            Secondes\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonSec\"\r\n                                value={lonSec}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLonSec(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>\"</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <label className=\"form-label\" htmlFor=\"latitude\">\r\n                            Longitude\r\n                        </label>\r\n                        <div\r\n                            className=\"btn-group\"\r\n                            name=\"latitude\"\r\n                            role=\"group\"\r\n                            aria-label=\"Basic radio toggle button group\"\r\n                        >\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"lonRadioE\"\r\n                                value=\"E\"\r\n                                autoComplete=\"off\"\r\n                                checked={lonRad === \"E\"}\r\n                                onChange={(e) => setLonRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"lonRadioE\"\r\n                            >\r\n                                Est\r\n                            </label>\r\n                            <input\r\n                                className=\"btn-check\"\r\n                                type=\"radio\"\r\n                                id=\"lonRadioO\"\r\n                                value=\"O\"\r\n                                autoComplete=\"off\"\r\n                                checked={lonRad === \"O\"}\r\n                                onChange={(e) => setLonRad(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"btn btn-outline-primary\"\r\n                                htmlFor=\"lonRadioO\"\r\n                            >\r\n                                Ouest\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latDistDeg\">\r\n                            Degré latitude\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latDistDeg\"\r\n                                value={latDistDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -180, 180) &&\r\n                                    setLatDistDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"latDistMin\">\r\n                            Minutes latitude\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"latDistMin\"\r\n                                value={latDistMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLatDistMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row g-3 align-items-end\" noValidate>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonDistDeg\">\r\n                            Degré longitude\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonDistDeg\"\r\n                                value={lonDistDeg}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, -180, 180) &&\r\n                                    setLonDistDeg(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>°</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <label className=\"form-label\" htmlFor=\"lonDistMin\">\r\n                            Minutes longitude\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                id=\"lonDistMin\"\r\n                                value={lonDistMin}\r\n                                onChange={(e) =>\r\n                                    isBetween(e.target.value, 0, 60) &&\r\n                                    setLonDistMin(e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-group-text\">\r\n                                <b>'</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"form-label\" htmlFor=\"mapZoom\">\r\n                            Zoom :\r\n                        </label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            id=\"mapZoom\"\r\n                            value={mapZoom}\r\n                            onChange={(e) => setMapZoom(e.target.value)}\r\n                        >\r\n                            <option value=\"10\">1:500 000</option>\r\n                            <option value=\"11\">1:250 000</option>\r\n                            <option value=\"12\">1:150 000</option>\r\n                            <option value=\"13\">1:70 000</option>\r\n                            <option value=\"14\">1:35 000</option>\r\n                            <option value=\"15\">1:15 000</option>\r\n                            <option value=\"16\">1:8 000</option>\r\n                            <option value=\"17\">1:4 000</option>\r\n                            <option value=\"18\">1:2 000</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={handleCloseSettings}>\r\n                    Annuler\r\n                </Button>\r\n                <Button variant=\"success\" onClick={applySettings}>\r\n                    Valider\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nconst fs = window.require(\"fs\");\r\nconsole.log({ fs });\r\nconst request = require(\"request\");\r\nconsole.log({ request });\r\nconst shelljs = require(\"shelljs\");\r\nconsole.log({ shelljs });\r\n\r\n/**\r\n * TODO :\r\n * Quand on valide une coordonnées, cela rajoute à savedMaps, le nom de la carte, & ça créé le dossier\r\n * Faire la lecture quand on clique sur une map\r\n */\r\n\r\nexport const LoadMapModal = (props) => {\r\n    const {\r\n        show,\r\n        mapArrayState,\r\n        mapNameState,\r\n        savedMapsState,\r\n        isStoredMapState,\r\n        storedMapState\r\n    } = props;\r\n    const [isStoredMap, setIsStoredMap] = isStoredMapState;\r\n    const [mapName, setMapName] = mapNameState;\r\n    const [mapArray, setMapArray] = mapArrayState;\r\n    const [showLoadMap, setShowLoadMap] = show;\r\n    const [savedMaps, setSavedMaps] = savedMapsState;\r\n    const [storedMapName, setStoredMapName] = storedMapState;\r\n    const [currentlySelectedMapName, setCurrentlySelectedMapName] = useState(\r\n        savedMaps ? savedMaps[0] : \"\"\r\n    );\r\n    const handleCloseLoadMap = () => setShowLoadMap(false);\r\n\r\n    // To call when mapArray changes\r\n    const download = (uri, filename, callback) => {\r\n        request.head(uri, () => {\r\n            request(uri)\r\n                .pipe(fs.createWriteStream(filename))\r\n                .on(\"close\", callback);\r\n        });\r\n    };\r\n\r\n    const done = () => console.log(\"terminado\");\r\n\r\n    useEffect(() => {\r\n        if (!isStoredMap) {\r\n            mapArray.map((row, rowIndex) => {\r\n                row.map((cell, cellIndex) => {\r\n                    download(\r\n                        `https://a.tile.openstreetmap.fr/osmfr/${cell[0]}/${cell[1]}/${cell[2]}.png`,\r\n                        \"cartes/\" +\r\n                            mapName +\r\n                            \"/openstreetmap/\" +\r\n                            rowIndex +\r\n                            \"_\" +\r\n                            cellIndex +\r\n                            \".png\",\r\n                        done\r\n                    );\r\n                    download(\r\n                        `https://tiles.openseamap.org/seamark/${cell[0]}/${cell[1]}/${cell[2]}.png`,\r\n                        \"cartes/\" +\r\n                            mapName +\r\n                            \"/openseamap/\" +\r\n                            rowIndex +\r\n                            \"_\" +\r\n                            cellIndex +\r\n                            \".png\",\r\n                        done\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }, [mapArray]);\r\n\r\n    useEffect(() => {\r\n        const saveCurrentMap = async () => {\r\n            if (mapArray.length) {\r\n                var data_file = \"cartes/\" + mapName + \"/informations.txt\";\r\n                var content_file =\r\n                    \"zoom=\" +\r\n                    mapArray[0][0][0] +\r\n                    \":latSize=\" +\r\n                    mapArray.length +\r\n                    \":lonSize=\" +\r\n                    mapArray[0].length;\r\n                await fs.mkdir(\"cartes/\" + mapName, (err) => {\r\n                    if (err) throw err;\r\n\r\n                    console.log(\"The dir street was succesfully created!\");\r\n                });\r\n                await fs.mkdir(\r\n                    \"cartes/\" + mapName + \"/openstreetmap\",\r\n                    (err) => {\r\n                        if (err) throw err;\r\n\r\n                        console.log(\"The dir street was succesfully created!\");\r\n                    }\r\n                );\r\n                await fs.mkdir(\"cartes/\" + mapName + \"/openseamap\", (err) => {\r\n                    if (err) throw err;\r\n\r\n                    console.log(\"The dir sea was succesfully created!\");\r\n                });\r\n                await fs.writeFile(data_file, content_file, (err) => {\r\n                    if (err) throw err;\r\n\r\n                    console.log(\"The file was succesfully saved!\");\r\n                });\r\n            }\r\n        };\r\n        saveCurrentMap();\r\n    }, [savedMaps]);\r\n\r\n    useEffect(() => {\r\n        setCurrentlySelectedMapName(savedMaps[0]);\r\n    }, [savedMaps]);\r\n\r\n    console.log(currentlySelectedMapName);\r\n    const handleValidate = (selectedMapName) => {\r\n        console.log(selectedMapName);\r\n        setStoredMapName(selectedMapName);\r\n\r\n        const dataFilePath = \"cartes/\" + selectedMapName + \"/informations.txt\";\r\n\r\n        fs.readFile(dataFilePath, \"utf8\", function (err, data) {\r\n            if (err) {\r\n                return console.log(err);\r\n            }\r\n\r\n            let zoom = data.split(\":\")[0].split(\"=\")[1];\r\n            let latSize = data.split(\":\")[1].split(\"=\")[1];\r\n            let lonSize = data.split(\":\")[2].split(\"=\")[1];\r\n\r\n            const newMapArray = [];\r\n            for (let i = 0; i <= latSize - 1; ++i) {\r\n                newMapArray[i] = [];\r\n                for (let j = 0; j <= lonSize - 1; ++j) {\r\n                    newMapArray[i][j] = [i, j];\r\n                }\r\n            }\r\n            setIsStoredMap(true);\r\n            setMapArray(newMapArray);\r\n        });\r\n\r\n        handleCloseLoadMap();\r\n    };\r\n\r\n    return (\r\n        <Modal show={showLoadMap} onHide={handleCloseLoadMap} size=\"lg\">\r\n            <Modal.Header>\r\n                <Modal.Title>Charger une carte</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Nom</Form.Label>\r\n                        <Form.Control\r\n                            disabled={!savedMaps.length}\r\n                            as=\"select\"\r\n                            value={currentlySelectedMapName}\r\n                            onChange={(e) =>\r\n                                setCurrentlySelectedMapName(e.target.value)\r\n                            }\r\n                        >\r\n                            {!savedMaps.length ? (\r\n                                <option>Pas de carte sauvegardée</option>\r\n                            ) : (\r\n                                savedMaps.map((currMapName) => (\r\n                                    <option value={currMapName}>\r\n                                        {currMapName}\r\n                                    </option>\r\n                                ))\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={handleCloseLoadMap}>\r\n                    Annuler\r\n                </Button>\r\n                <Button\r\n                    variant=\"success\"\r\n                    disabled={!savedMaps.length}\r\n                    onClick={() => handleValidate(currentlySelectedMapName)}\r\n                >\r\n                    Valider Carte\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { SettingsModal } from \"./Modals/SettingsModal\";\r\nimport { LoadMapModal } from \"./Modals/LoadMapModal\";\r\nconst fs = window.require(\"fs\");\r\n\r\nexport const Modals = (props) => {\r\n    const {\r\n        settingsModal,\r\n        loadMapModal,\r\n        mapArrayState,\r\n        isStoredMapState,\r\n        setMapSettingsData,\r\n        mapNameState,\r\n        storedMapState\r\n    } = props;\r\n    const [mapName, setMapName] = mapNameState;\r\n    const [savedMaps, setSavedMaps] = useState([]);\r\n    const [mapArray, setMapArray] = mapArrayState;\r\n    const [hasLoadedMapDir, setHasLoadedMapDir] = useState(false);\r\n\r\n    // Charge toutes les cartes enregistrées dans le disque\r\n    useEffect(() => {\r\n        if (!hasLoadedMapDir) {\r\n            const loadStoredMaps = async () => {\r\n                const localMapArray = [];\r\n                await fs.readdir(\"cartes/\", (_, fileList) => {\r\n                    console.log({ fileList });\r\n                    if (fileList.length) {\r\n                        fileList.forEach((file) => {\r\n                            localMapArray.push(file);\r\n                        });\r\n                    }\r\n                });\r\n                console.log({ localMapArray });\r\n                setSavedMaps(localMapArray);\r\n            };\r\n            loadStoredMaps();\r\n            setHasLoadedMapDir(true);\r\n        }\r\n    }, [hasLoadedMapDir]);\r\n    const [isStoredMap, setIsStoredMap] = isStoredMapState;\r\n\r\n    return (\r\n        <>\r\n            <LoadMapModal\r\n                show={loadMapModal}\r\n                mapArrayState={[mapArray, setMapArray]}\r\n                isStoredMapState={isStoredMapState}\r\n                mapNameState={[mapName, setMapName]}\r\n                savedMapsState={[savedMaps, setSavedMaps]}\r\n                storedMapState={storedMapState}\r\n            />\r\n            <SettingsModal\r\n                setMapSettingsData={setMapSettingsData}\r\n                show={settingsModal}\r\n                setMapArray={setMapArray}\r\n                mapNameState={[mapName, setMapName]}\r\n                savedMapsState={[savedMaps, setSavedMaps]}\r\n                setIsStoredMap={setIsStoredMap}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import { Canvas } from \"./components/Canvas\";\r\nimport { SeaMap } from \"./components/SeaMap\";\r\nimport { TopBar } from \"./components/TopBar\";\r\nimport { Modals } from \"./components/Modals\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport const App = () => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [showLoadMap, setShowLoadMap] = useState(false);\r\n    const [mapArray, setMapArray] = useState([]);\r\n    const [isStoredMap, setIsStoredMap] = useState(true);\r\n    const [mapSettingsData, setMapSettingsData] = useState({});\r\n    const [mapName, setMapName] = useState(\"\");\r\n    const [storedMapName, setStoredMapName] = useState(\"\");\r\n    const [amer, setAmer] = useState(false);\r\n    const [hasScrollListener, setHasScrollListener] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const ele = document.getElementById(\"dragMap\");\r\n        if (hasScrollListener) {\r\n            let x = 0;\r\n            let y = 0;\r\n            let html = document.documentElement;\r\n            const mouseDownHandler = (e) => {\r\n                x = e.clientX;\r\n                y = e.clientY;\r\n                document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n                document.addEventListener(\"mouseup\", mouseUpHandler);\r\n                ele.style.cursor = \"grabbing\";\r\n                ele.style.userSelect = \"none\";\r\n            };\r\n\r\n            const mouseMoveHandler = (e) => {\r\n                if (ele.offsetLeft > 0) {\r\n                    ele.style.left = \"0px\";\r\n                    return;\r\n                }\r\n                if (ele.offsetTop > 0) {\r\n                    ele.style.top = \"0px\";\r\n                    return;\r\n                }\r\n                if (html.scrollHeight == html.clientHeight) {\r\n                    ele.style.top = `${ele.offsetTop + 1}px`;\r\n                    return;\r\n                }\r\n                if (html.scrollWidth == html.clientWidth) {\r\n                    ele.style.left = `${ele.offsetLeft + 1}px`;\r\n                    return;\r\n                }\r\n\r\n                const dx = e.clientX - x;\r\n                const dy = e.clientY - y;\r\n                ele.style.top = `${ele.offsetTop + dy * 0.3}px`;\r\n                ele.style.left = `${ele.offsetLeft + dx * 0.3}px`;\r\n                x = e.clientX;\r\n                y = e.clientY;\r\n            };\r\n\r\n            const mouseUpHandler = () => {\r\n                document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n                document.removeEventListener(\"mouseup\", mouseUpHandler);\r\n                ele.style.cursor = \"grab\";\r\n                ele.style.removeProperty(\"user-select\");\r\n            };\r\n            setHasScrollListener(true);\r\n            ele.addEventListener(\"mousedown\", mouseDownHandler);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <TopBar\r\n                setShowSettings={setShowSettings}\r\n                setShowLoadMap={setShowLoadMap}\r\n                amerState={[amer, setAmer]}\r\n            />\r\n            <Modals\r\n                settingsModal={[showSettings, setShowSettings]}\r\n                loadMapModal={[showLoadMap, setShowLoadMap]}\r\n                isStoredMapState={[isStoredMap, setIsStoredMap]}\r\n                mapArrayState={[mapArray, setMapArray]}\r\n                setMapSettingsData={setMapSettingsData}\r\n                mapNameState={[mapName, setMapName]}\r\n                storedMapState={[storedMapName, setStoredMapName]}\r\n            />\r\n            <div id=\"dragMap\" className=\"draggable\">\r\n                <SeaMap\r\n                    mapArray={mapArray}\r\n                    isStoredMap={isStoredMap}\r\n                    mapSettingsData={mapSettingsData}\r\n                    storedMapName={storedMapName}\r\n                />\r\n                <Canvas amer={amer} mapArray={mapArray} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport fs from \"fs\";\r\nconsole.log({ fs });\r\n\r\nconst renderReactDom = () => {\r\n    ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nif (window.cordova) {\r\n    document.addEventListener(\r\n        \"deviceready\",\r\n        () => {\r\n            renderReactDom();\r\n        },\r\n        false\r\n    );\r\n} else {\r\n    renderReactDom();\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}